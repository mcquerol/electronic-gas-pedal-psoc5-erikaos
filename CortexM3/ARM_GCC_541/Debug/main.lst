ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ISR2_systick_handler,"ax",%progbits
  20              		.align	2
  21              		.global	ISR2_systick_handler
  22              		.thumb
  23              		.thumb_func
  24              		.type	ISR2_systick_handler, %function
  25              	ISR2_systick_handler:
  26              	.LFB111:
  27              		.file 1 "source\\asw\\main.c"
   1:source\asw/main.c **** /* ========================================
   2:source\asw/main.c ****  *
   3:source\asw/main.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:source\asw/main.c ****  * All Rights Reserved
   5:source\asw/main.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:source\asw/main.c ****  *
   7:source\asw/main.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:source\asw/main.c ****  * WHICH IS THE PROPERTY OF your company.
   9:source\asw/main.c ****  *
  10:source\asw/main.c ****  * ========================================
  11:source\asw/main.c **** */
  12:source\asw/main.c **** #include "project.h"
  13:source\asw/main.c **** #include "global.h"
  14:source\asw/main.c **** 
  15:source\asw/main.c **** #include "tsk_io.h"
  16:source\asw/main.c **** #include "tsk_control.h"
  17:source\asw/main.c **** 
  18:source\asw/main.c **** 
  19:source\asw/main.c **** #include "led.h"
  20:source\asw/main.c **** #include "joystick.h"
  21:source\asw/main.c **** 
  22:source\asw/main.c **** //ISR which will increment the systick counter every ms
  23:source\asw/main.c **** ISR(systick_handler)
  24:source\asw/main.c **** {
  28              		.loc 1 24 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 2


  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  25:source\asw/main.c ****     CounterTick(cnt_systick);
  36              		.loc 1 25 0
  37 0002 0020     		movs	r0, #0
  38 0004 FFF7FEFF 		bl	EE_oo_IncrementCounter
  39              	.LVL0:
  40 0008 08BD     		pop	{r3, pc}
  41              		.cfi_endproc
  42              	.LFE111:
  43              		.size	ISR2_systick_handler, .-ISR2_systick_handler
  44 000a 00BF     		.section	.text.systick_handler,"ax",%progbits
  45              		.align	2
  46              		.global	systick_handler
  47              		.thumb
  48              		.thumb_func
  49              		.type	systick_handler, %function
  50              	systick_handler:
  51              	.LFB110:
  23:source\asw/main.c **** {
  52              		.loc 1 23 0
  53              		.cfi_startproc
  54              		@ Stack Align: May be called with mis-aligned SP.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0000 6846     		mov	r0, sp
  58              		.cfi_register 13, 0
  59 0002 20F00701 		bic	r1, r0, #7
  60 0006 8D46     		mov	sp, r1
  61 0008 19B5     		push	{r0, r3, r4, lr}
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 13, -16
  64              		.cfi_offset 3, -12
  65              		.cfi_offset 4, -8
  66              		.cfi_offset 14, -4
  67              	.LVL1:
  68              	.LBB56:
  69              	.LBB57:
  70              		.file 2 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 3


  19:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_types.inc"
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 4


  76:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 5


 133:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__enable_irq();
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 6


 190:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
  71              		.loc 2 211 0
  72              		.syntax unified
  73              	@ 211 "Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc" 1
  74 000a 72B6     		cpsid i
  75              	@ 0 "" 2
  76              		.thumb
  77              		.syntax unified
  78              	.LBE57:
  79              	.LBE56:
  80              	.LBB58:
  81              	.LBB59:
 212:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 7


 236:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
 261:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
 262:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 263:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 264:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 265:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 266:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	return 0;
 267:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else
 268:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	return istat;
 269:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 270:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 271:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 273:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Return true (not 0) if IRQs are enabled, 0 (false) if IRQ are disabled.
 274:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 275:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  EE_cortex_mx_get_IRQ_enabled(void)
 276:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 277:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 278:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	EE_UREG ie;
 279:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 280:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 281:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	ie = __get_PRIMASK();
 282:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 283:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 284:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    MRS     r0, PRIMASK\n"
 285:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    EOR     r0, #1\n"
 286:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 287:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 288:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 289:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 290:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	ie = PRIMASK;
 291:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 292:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("MRS %0, primask" : "=r" (ie) );
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 8


 293:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 294:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 295:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 296:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 297:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	return 0;
 298:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else
 299:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	return EE_cortex_mx_are_IRQs_enabled(ie);
 300:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 301:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 302:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 303:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_TYPEISR2PRIO  EE_cortex_mx_get_int_prio(void)
 304:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 305:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 306:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 307:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 308:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_UREG prio;
 309:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef	__KEIL__
 310:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG BASEPRI __ASM("basepri");
 311:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 312:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 313:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 314:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 316:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	/* NVIC_INT_PRI_S = 5 */
 317:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    MRS     R0, BASEPRI\n"
 318:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    ASR     R0, #5\n"
 319:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    BLX     LR\n");
 320:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 321:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 322:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	prio = BASEPRI;
 323:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 324:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 325:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MRS %0, BASEPRI" : "=r" (prio) :: );
  82              		.loc 2 325 0
  83              		.syntax unified
  84              	@ 325 "Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc" 1
  85 000c EFF31184 		MRS r4, BASEPRI
  86              	@ 0 "" 2
  87              	.LVL2:
  88              		.thumb
  89              		.syntax unified
  90              	.LBE59:
  91              	.LBE58:
  92              	.LBB60:
  93              	.LBB61:
 326:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else
 327:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MRS %0, BASEPRI" :: "=r" (prio));
 328:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__GNU__ */
 329:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 330:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 331:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 332:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 333:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	return 0;
 334:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else
 335:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	return prio >> NVIC_INT_PRI_S;
 336:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 337:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 9


 338:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CORTEX_M4__ */
 339:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	return 0;
 340:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CORTEX_M4__ */
 341:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 342:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 343:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_set_int_prio(
 344:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****   EE_TYPEISR2PRIO prio
 345:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** )
 346:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 347:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 348:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 349:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	/* NVIC_INT_PRI_S = 5 */
 350:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    LSL    R0, #5\n"
 351:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    MSR    BASEPRI, R0\n");
 352:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 353:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 354:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG BASEPRI __ASM("basepri");
 355:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	BASEPRI = (prio << NVIC_INT_PRI_S);
 356:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 357:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 358:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MSR BASEPRI, %0" :: "r" (prio << NVIC_INT_PRI_S) : );
 359:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else
 360:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MSR BASEPRI, %0" :: "r" (prio << NVIC_INT_PRI_S));
 361:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__GNU__ */
 362:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 363:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 364:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* __CORTEX_M4__ */
 365:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 366:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 367:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_TYPEISR2PRIO  EE_cortex_mx_get_isr_prio(
 368:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****   void
 369:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** )
 370:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 371:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 372:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****   register EE_UREG vectact = NVIC_INT_CTRL_R & NVIC_INT_CTRL_VEC_ACT_M;
  94              		.loc 2 372 0
  95 0010 1E4B     		ldr	r3, .L9
  96 0012 1B68     		ldr	r3, [r3]
  97 0014 DBB2     		uxtb	r3, r3
  98              	.LVL3:
 373:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****   register EE_TYPEISR2PRIO prio = 0;
 374:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 375:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****   if (vectact > EE_CORTEX_MX_SYSTICK_EXC_NUM) {
  99              		.loc 2 375 0
 100 0016 0F2B     		cmp	r3, #15
 101 0018 10D9     		bls	.L4
 376:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****     vectact -= EE_CORTEX_MX_SYSTICK_EXC_NUM + 1;
 102              		.loc 2 376 0
 103 001a 103B     		subs	r3, r3, #16
 104              	.LVL4:
 377:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****     prio = NVIC_GET_PRI(vectact);
 105              		.loc 2 377 0
 106 001c 23F00302 		bic	r2, r3, #3
 107 0020 02F16042 		add	r2, r2, #-536870912
 108 0024 02F56442 		add	r2, r2, #58368
 109 0028 1168     		ldr	r1, [r2]
 110 002a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 10


 111              	.LVL5:
 112 002c 03F01803 		and	r3, r3, #24
 113 0030 E022     		movs	r2, #224
 114 0032 9A40     		lsls	r2, r2, r3
 115 0034 0A40     		ands	r2, r2, r1
 116 0036 22FA03F3 		lsr	r3, r2, r3
 117              	.LVL6:
 118 003a 06E0     		b	.L5
 119              	.LVL7:
 120              	.L4:
 378:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****   }
 379:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef	__USE_SYSTICK__
 380:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****   else if (vectact == EE_CORTEX_MX_SYSTICK_EXC_NUM) {
 121              		.loc 2 380 0
 122 003c 0F2B     		cmp	r3, #15
 123 003e 03D1     		bne	.L8
 381:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****     prio = NVIC_SYS_PRI3_R >> NVIC_SYS_PRI3_TICK_S;
 124              		.loc 2 381 0
 125 0040 134B     		ldr	r3, .L9+4
 126              	.LVL8:
 127 0042 1B68     		ldr	r3, [r3]
 128 0044 1B0E     		lsrs	r3, r3, #24
 129              	.LVL9:
 130 0046 00E0     		b	.L5
 131              	.LVL10:
 132              	.L8:
 373:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 133              		.loc 2 373 0
 134 0048 0023     		movs	r3, #0
 135              	.LVL11:
 136              	.L5:
 137              	.LBE61:
 138              	.LBE60:
 139              	.LBB62:
 140              	.LBB63:
 358:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else
 141              		.loc 2 358 0
 142              		.syntax unified
 143              	@ 358 "Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc" 1
 144 004a 83F31188 		MSR BASEPRI, r3
 145              	@ 0 "" 2
 146              		.thumb
 147              		.syntax unified
 148              	.LBE63:
 149              	.LBE62:
 150              	.LBB64:
 151              	.LBB65:
 152              		.file 3 "Generated_Source\\PSoC5/ErikaOS_common_ee_irqstub.inc"
   1:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * Copyright (C) 2002-2010  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * and/or modify it under the terms of the GNU General Public License
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 11


  10:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * Some IRQ-related stuff.
  43:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * Author: 2009-2010,  Bernardo  Dal Seno
  44:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /*******************************************************************************
  53:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *                        !!!WARNING!!!
  54:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * This header depends on "cpu/common/inc/ee_context.inc" or your own
  55:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * implementation of the same. You should include it file before including this
  56:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * file
  57:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  ******************************************************************************/
  58:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** #ifndef PKG_CPU_COMMON_INC_EE_IRQSTUB_H
  60:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** #define PKG_CPU_COMMON_INC_EE_IRQSTUB_H
  61:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  62:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /* this bring EE_IRQ_nesting_level definition */
  63:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** #include "ErikaOS_common_ee_primitives.inc"
  64:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /* True if we are inside an interrupt-serving routine */
  66:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ EE_TYPEBOOL  EE_is_inside_ISR_call( void )
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 12


  67:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** {
  68:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****   return (EE_IRQ_nesting_level > 0U);
  69:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** }
  70:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  71:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  72:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /* EE_decrement_IRQ_nesting_level() and EE_increment_IRQ_nesting_level() are
  73:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * used to keep track of the current IRQ nesting level.
  74:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * EE_std_enableIRQ_nested() and EE_std_disableIRQ_nested() are used to control
  75:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  * when IRQ nesting is enabled.
  76:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  */
  77:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** #if defined(__AS_SC4__)
  78:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /* For SC4 the nesting level is updated inside the prestub and postub */
  79:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) {}
  80:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) {}
  81:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_std_enableIRQ_nested(void) {}
  82:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_std_disableIRQ_nested(void) {}
  83:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** #elif defined(__ALLOW_NESTED_IRQ__)
  84:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) { --EE_IRQ_nesting_level; }
  85:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { ++EE_IRQ_nesting_level; }
 153              		.loc 3 85 0
 154 004e 114A     		ldr	r2, .L9+8
 155 0050 1368     		ldr	r3, [r2]
 156 0052 0133     		adds	r3, r3, #1
 157 0054 1360     		str	r3, [r2]
 158              	.LBE65:
 159              	.LBE64:
  23:source\asw/main.c **** {
 160              		.loc 1 23 0
 161 0056 012B     		cmp	r3, #1
 162 0058 01D1     		bne	.L6
  23:source\asw/main.c **** {
 163              		.loc 1 23 0 is_stmt 0 discriminator 1
 164 005a FFF7FEFF 		bl	EE_cortex_mx_change_IRQ_stack
 165              	.LVL12:
 166              	.L6:
 167              	.LBB66:
 168              	.LBB67:
 191:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 169              		.loc 2 191 0 is_stmt 1 discriminator 3
 170              		.syntax unified
 171              	@ 191 "Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc" 1
 172 005e 62B6     		cpsie i
 173              	@ 0 "" 2
 174              		.thumb
 175              		.syntax unified
 176              	.LBE67:
 177              	.LBE66:
  23:source\asw/main.c **** {
 178              		.loc 1 23 0 discriminator 3
 179 0060 FFF7FEFF 		bl	ISR2_systick_handler
 180              	.LVL13:
 181              	.LBB68:
 182              	.LBB69:
 211:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 183              		.loc 2 211 0 discriminator 3
 184              		.syntax unified
 185              	@ 211 "Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc" 1
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 13


 186 0064 72B6     		cpsid i
 187              	@ 0 "" 2
 188              	.LVL14:
 189              		.thumb
 190              		.syntax unified
 191              	.LBE69:
 192              	.LBE68:
 193              	.LBB70:
 194              	.LBB71:
 358:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else
 195              		.loc 2 358 0 discriminator 3
 196              		.syntax unified
 197              	@ 358 "Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc" 1
 198 0066 84F31188 		MSR BASEPRI, r4
 199              	@ 0 "" 2
 200              	.LVL15:
 201              		.thumb
 202              		.syntax unified
 203              	.LBE71:
 204              	.LBE70:
 205              	.LBB72:
 206              	.LBB73:
  86:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /*  EE_std_enableIRQ_nested() and EE_std_disableIRQ_nested() must be defined in
  87:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *  the platform-dependent part, as they dependend on the particular way
  88:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****  *  interrupts are handled by the CPU. */
  89:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** #else
  90:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) { EE_IRQ_nesting_level = 0U; }
  91:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { EE_IRQ_nesting_level = 1U; }
  92:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_std_enableIRQ_nested(void) {}
  93:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_std_disableIRQ_nested(void) {}
  94:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** #endif
  95:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** 
  96:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_BCC2__)) || (defined(__OO_ECC1__)) \
  97:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****   || (defined(__OO_ECC2__)) || (defined(__AS_SC4__))
  98:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** /* Function to be called at the end of a function service interrupt, to execute
  99:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****    clean-up specifiend in Autosar standard */
 100:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_std_end_IRQ_post_stub(void)
 101:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** {
 102:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc ****   EE_IRQ_end_post_stub();
 207              		.loc 3 102 0 discriminator 3
 208 006a FFF7FEFF 		bl	EE_IRQ_end_post_stub
 209              	.LVL16:
 210              	.LBE73:
 211              	.LBE72:
 212              	.LBB74:
 213              	.LBB75:
  84:Generated_Source\PSoC5/ErikaOS_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { ++EE_IRQ_nesting_level; }
 214              		.loc 3 84 0 discriminator 3
 215 006e 094A     		ldr	r2, .L9+8
 216 0070 1368     		ldr	r3, [r2]
 217 0072 013B     		subs	r3, r3, #1
 218 0074 1360     		str	r3, [r2]
 219              	.LBE75:
 220              	.LBE74:
  23:source\asw/main.c **** {
 221              		.loc 1 23 0 discriminator 3
 222 0076 1BB9     		cbnz	r3, .L7
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 14


  23:source\asw/main.c **** {
 223              		.loc 1 23 0 is_stmt 0 discriminator 4
 224 0078 FFF7FEFF 		bl	EE_cortex_mx_change_IRQ_stack_back
 225              	.LVL17:
 226              	.LBB76:
 227              	.LBB77:
 228              		.file 4 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc"
   1:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  /** 
  42:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 	
  43:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 	@file	ee_irq_cng_cont.h
  44:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 	@brief	Function active the context change interrupt
  45:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 	@author	Gianluca Franchino
  46:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 	@author	Giuseppe Serano
  47:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 	@date	2012
  48:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** */ 
  49:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****     
  50:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** /*
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 15


  51:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * PSoC Port and API Generation
  52:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * Carlos Fernando Meier Martinez
  53:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  * Hochschule Darmstadt, Germany. 2017.
  54:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc ****  */
  55:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 
  56:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** #ifndef __INCLUDE_CORTEX_MX_IRQ_CNG_CONTEXT_H__
  57:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** #define __INCLUDE_CORTEX_MX_IRQ_CNG_CONTEXT_H__
  58:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** #ifdef __GNU__
  60:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** #include "ErikaOS_common_ee_compiler_gcc.inc"
  61:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** #endif
  62:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 
  63:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** /* Implemented in ee_<compiler>_change_context_isr.s */
  64:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** extern void EE_switch_context(void);
  65:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 
  66:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** __INLINE__ void  EE_cortex_mx_IRQ_active_change_context(void)
  67:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** {
  68:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_irq_cng_cont.inc **** 	EE_switch_context();
 229              		.loc 4 68 0 is_stmt 1 discriminator 4
 230 007c FFF7FEFF 		bl	EE_switch_context
 231              	.LVL18:
 232              	.L7:
 233              	.LBE77:
 234              	.LBE76:
 235              	.LBB78:
 236              	.LBB79:
 191:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 237              		.loc 2 191 0 discriminator 6
 238              		.syntax unified
 239              	@ 191 "Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc" 1
 240 0080 62B6     		cpsie i
 241              	@ 0 "" 2
 242              		.thumb
 243              		.syntax unified
 244              	.LBE79:
 245              	.LBE78:
  23:source\asw/main.c **** {
 246              		.loc 1 23 0 discriminator 6
 247 0082 BDE81940 		pop	{r0, r3, r4, lr}
 248              		.cfi_restore 14
 249              		.cfi_restore 4
 250              		.cfi_restore 3
 251              		.cfi_restore 0
 252              		.cfi_def_cfa_offset 0
 253 0086 8546     		mov	sp, r0
 254 0088 7047     		bx	lr
 255              	.L10:
 256 008a 00BF     		.align	2
 257              	.L9:
 258 008c 04ED00E0 		.word	-536810236
 259 0090 20ED00E0 		.word	-536810208
 260 0094 00000000 		.word	EE_IRQ_nesting_level
 261              		.cfi_endproc
 262              	.LFE110:
 263              		.size	systick_handler, .-systick_handler
 264              		.section	.text.main,"ax",%progbits
 265              		.align	2
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 16


 266              		.global	main
 267              		.thumb
 268              		.thumb_func
 269              		.type	main, %function
 270              	main:
 271              	.LFB112:
  26:source\asw/main.c **** }
  27:source\asw/main.c **** 
  28:source\asw/main.c **** int main()
  29:source\asw/main.c **** {
 272              		.loc 1 29 0
 273              		.cfi_startproc
 274              		@ Volatile: function does not return.
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 08B5     		push	{r3, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
  30:source\asw/main.c ****     CyGlobalIntEnable; /* Enable global interrupts. */
 281              		.loc 1 30 0
 282              		.syntax unified
 283              	@ 30 "source\asw\main.c" 1
 284 0002 62B6     		CPSIE   i
 285              	@ 0 "" 2
 286              	.LVL19:
 287              		.thumb
 288              		.syntax unified
 289              	.LBB80:
 290              	.LBB81:
 291              		.file 5 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_systick.inc"
   1:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * Copyright (C) 2002-2012  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * this exception to your version of the code, but you are not
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 17


  27:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /**
  42:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @file	ee_systick.h
  43:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @brief	SysTick system timer driver header file.
  44:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @author	Giuseppe Serano
  45:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @date	2012
  46:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  47:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** **/
  48:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  49:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** #ifndef	__INCLUDE_CORTEX_MX_SYSTICK_H__
  56:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** #define	__INCLUDE_CORTEX_MX_SYSTICK_H__
  57:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** #ifdef	__USE_SYSTICK__
  59:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /** error value. No errors happened **/
  61:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** #define	EE_SYSTICK_NO_ERRORS	0
  62:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /** error value. Wrong funtion arguments values **/
  63:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** #define	EE_SYSTICK_ERR_BAD_ARGS	1
  64:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /**
  66:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @brief Start SysTick.
  67:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     This will start the SysTick counter.  If an ISR has been defined, it is
  69:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     called when the SysTick counter rolls over.
  70:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  71:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @note Calling this function will cause the SysTick counter to (re)commence
  72:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     counting from its current value.  The counter is not automatically reloaded
  73:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     with the period as specified in a previous call to EE_systick_set_period().
  74:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     If an immediate reload is required, the \b NVIC_ST_CURRENT register must be
  75:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     written to force this.  Any write to this register clears the SysTick
  76:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     counter to 0 and will cause a reload with the supplied period on the next
  77:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     clock.
  78:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  */
  79:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** __INLINE__ void  EE_systick_start(void)
  80:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** {
  81:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****   NVIC_ST_CTRL_R |= NVIC_ST_CTRL_CLK_SRC | NVIC_ST_CTRL_ENABLE;
  82:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** }
  83:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 18


  84:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /**
  85:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @brief Stop SysTick.
  86:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     This will stop the SysTick counter.  If an ISR has been defined, it will
  88:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     no longer be called until SysTick is restarted.
  89:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** */
  90:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** __INLINE__ void  EE_systick_stop(void)
  91:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** {
  92:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****   NVIC_ST_CTRL_R &= ~(NVIC_ST_CTRL_ENABLE);
  93:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** }
  94:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  95:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /**
  96:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @brief Enables the SysTick interrupt.
  97:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
  98:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     This function will enable the SysTick interrupt, allowing it to be
  99:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     reflected to the processor.
 100:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @note The SysTick ISR does not need to clear the SysTick interrupt source as
 102:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     this is done automatically by NVIC when the interrupt ISR is called.
 103:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  */
 104:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** __INLINE__ void  EE_systick_enable_int()
 105:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****   NVIC_ST_CTRL_R |= NVIC_ST_CTRL_INTEN;
 107:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** }
 108:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
 109:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /**
 110:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @brief Disables the SysTick interrupt.
 111:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     This function will disable the SysTick interrupt, preventing it from being
 113:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     reflected to the processor.
 114:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  */
 115:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** __INLINE__ void  EE_systick_disable_int()
 116:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** {
 117:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****   NVIC_ST_CTRL_R &= ~(NVIC_ST_CTRL_INTEN);
 118:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** }
 119:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
 120:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** /**
 121:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @brief Sets the period of the SysTick counter.
 122:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
 123:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @param period is the number of clock ticks in each period of the SysTick
 124:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     counter; must be between 1 and 16,777,216, inclusive. If the \e period is
 125:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     out of range the function returns \b EE_SYSTICK_ERR_BAD_ARGS, else it will
 126:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     returns \b EE_SYSTICK_NO_ERRORS.
 127:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     This function sets the rate at which the SysTick counter wraps; this
 129:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     equates to the number of processor clocks between interrupts.
 130:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
 131:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     @note Calling this function does not cause the SysTick counter to reload
 132:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     immediately.  If an immediate reload is required, the \b NVIC_ST_CURRENT
 133:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     register must be written.  Any write to this register clears the SysTick
 134:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     counter to 0 and will cause a reload with the \e period supplied here on
 135:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     the next clock after the SysTick is enabled.
 136:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****  */
 137:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** __INLINE__ EE_UREG  EE_systick_set_period(EE_UREG period)
 138:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** {
 139:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****   if ((period == NVIC_ST_RELOAD_S) || (period > NVIC_ST_RELOAD_M))
 140:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****     return EE_SYSTICK_ERR_BAD_ARGS;
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 19


 141:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc ****   NVIC_ST_RELOAD_R = period - 1;
 292              		.loc 5 142 0
 293 0004 054A     		ldr	r2, .L14
 294 0006 064B     		ldr	r3, .L14+4
 295 0008 1A60     		str	r2, [r3]
 296              	.LVL20:
 297              	.LBE81:
 298              	.LBE80:
 299              	.LBB82:
 300              	.LBB83:
 106:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** }
 301              		.loc 5 106 0
 302 000a 064A     		ldr	r2, .L14+8
 303 000c 1368     		ldr	r3, [r2]
 304 000e 43F00203 		orr	r3, r3, #2
 305 0012 1360     		str	r3, [r2]
 306              	.L12:
 307              	.LBE83:
 308              	.LBE82:
  31:source\asw/main.c ****    
  32:source\asw/main.c ****     //Set systick period to 1 ms. Enable the INT and start it.
  33:source\asw/main.c **** 	EE_systick_set_period(MILLISECONDS_TO_TICKS(1, BCLK__BUS_CLK__HZ));
  34:source\asw/main.c **** 	EE_systick_enable_int();
  35:source\asw/main.c ****    
  36:source\asw/main.c ****     // Start Operating System
  37:source\asw/main.c ****     for(;;)	    
  38:source\asw/main.c ****     	StartOS(OSDEFAULTAPPMODE);
 309              		.loc 1 38 0 discriminator 1
 310 0014 0020     		movs	r0, #0
 311 0016 FFF7FEFF 		bl	EE_oo_StartOS
 312              	.LVL21:
 313 001a FBE7     		b	.L12
 314              	.L15:
 315              		.align	2
 316              	.L14:
 317 001c 3F190100 		.word	71999
 318 0020 14E000E0 		.word	-536813548
 319 0024 10E000E0 		.word	-536813552
 320              		.cfi_endproc
 321              	.LFE112:
 322              		.size	main, .-main
 323              		.section	.text.unhandledException,"ax",%progbits
 324              		.align	2
 325              		.global	unhandledException
 326              		.thumb
 327              		.thumb_func
 328              		.type	unhandledException, %function
 329              	unhandledException:
 330              	.LFB113:
  39:source\asw/main.c **** }
  40:source\asw/main.c **** 
  41:source\asw/main.c **** void unhandledException()
  42:source\asw/main.c **** {
 331              		.loc 1 42 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 20


 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
  43:source\asw/main.c ****     //Ooops, something terrible happened....check the call stack to see how we got here...
  44:source\asw/main.c ****     __asm("bkpt");
 336              		.loc 1 44 0
 337              		.syntax unified
 338              	@ 44 "source\asw\main.c" 1
 339 0000 00BE     		bkpt
 340              	@ 0 "" 2
 341              		.thumb
 342              		.syntax unified
 343 0002 7047     		bx	lr
 344              		.cfi_endproc
 345              	.LFE113:
 346              		.size	unhandledException, .-unhandledException
 347              		.section	.text.Functsk_init,"ax",%progbits
 348              		.align	2
 349              		.global	Functsk_init
 350              		.thumb
 351              		.thumb_func
 352              		.type	Functsk_init, %function
 353              	Functsk_init:
 354              	.LFB114:
  45:source\asw/main.c **** }
  46:source\asw/main.c **** 
  47:source\asw/main.c **** /********************************************************************************
  48:source\asw/main.c ****  * Task Definitions
  49:source\asw/main.c ****  ********************************************************************************/
  50:source\asw/main.c **** 
  51:source\asw/main.c **** TASK(tsk_init)
  52:source\asw/main.c **** {
 355              		.loc 1 52 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 08B5     		push	{r3, lr}
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 3, -8
 362              		.cfi_offset 14, -4
  53:source\asw/main.c ****     
  54:source\asw/main.c ****     //Init MCAL Drivers
  55:source\asw/main.c ****     UART_LOG_Start();
 363              		.loc 1 55 0
 364 0002 FFF7FEFF 		bl	UART_LOG_Start
 365              	.LVL22:
  56:source\asw/main.c ****     LED_Init();
 366              		.loc 1 56 0
 367 0006 FFF7FEFF 		bl	LED_Init
 368              	.LVL23:
  57:source\asw/main.c ****     JOYSTICK_Init();
 369              		.loc 1 57 0
 370 000a FFF7FEFF 		bl	JOYSTICK_Init
 371              	.LVL24:
  58:source\asw/main.c ****     //Reconfigure ISRs with OS parameters.
  59:source\asw/main.c ****     //This line MUST be called after the hardware driver initialisation!
  60:source\asw/main.c ****     EE_system_init();
 372              		.loc 1 60 0
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 21


 373 000e FFF7FEFF 		bl	EE_system_init
 374              	.LVL25:
 375              	.LBB84:
 376              	.LBB85:
  81:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_systick.inc **** }
 377              		.loc 5 81 0
 378 0012 094A     		ldr	r2, .L19
 379 0014 1368     		ldr	r3, [r2]
 380 0016 43F00503 		orr	r3, r3, #5
 381 001a 1360     		str	r3, [r2]
 382              	.LBE85:
 383              	.LBE84:
  61:source\asw/main.c **** 	
  62:source\asw/main.c ****     //Start SysTick
  63:source\asw/main.c **** 	//Must be done here, because otherwise the isr vector is not overwritten yet
  64:source\asw/main.c ****     EE_systick_start();  
  65:source\asw/main.c **** 	
  66:source\asw/main.c ****     
  67:source\asw/main.c ****     SetRelAlarm(alarm_io_1ms,1,1);
 384              		.loc 1 67 0
 385 001c 0122     		movs	r2, #1
 386 001e 1146     		mov	r1, r2
 387 0020 0020     		movs	r0, #0
 388 0022 FFF7FEFF 		bl	EE_oo_SetRelAlarm
 389              	.LVL26:
  68:source\asw/main.c ****     
  69:source\asw/main.c ****     ActivateTask(tsk_control);
 390              		.loc 1 69 0
 391 0026 0320     		movs	r0, #3
 392 0028 FFF7FEFF 		bl	EE_oo_ActivateTask
 393              	.LVL27:
  70:source\asw/main.c ****     ActivateTask(tsk_background);
 394              		.loc 1 70 0
 395 002c 0120     		movs	r0, #1
 396 002e FFF7FEFF 		bl	EE_oo_ActivateTask
 397              	.LVL28:
  71:source\asw/main.c ****     
  72:source\asw/main.c ****     TerminateTask();
 398              		.loc 1 72 0
 399 0032 FFF7FEFF 		bl	EE_oo_TerminateTask
 400              	.LVL29:
 401 0036 08BD     		pop	{r3, pc}
 402              	.L20:
 403              		.align	2
 404              	.L19:
 405 0038 10E000E0 		.word	-536813552
 406              		.cfi_endproc
 407              	.LFE114:
 408              		.size	Functsk_init, .-Functsk_init
 409              		.section	.text.Functsk_background,"ax",%progbits
 410              		.align	2
 411              		.global	Functsk_background
 412              		.thumb
 413              		.thumb_func
 414              		.type	Functsk_background, %function
 415              	Functsk_background:
 416              	.LFB115:
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 22


  73:source\asw/main.c ****     
  74:source\asw/main.c **** }
  75:source\asw/main.c **** 
  76:source\asw/main.c **** 
  77:source\asw/main.c **** 
  78:source\asw/main.c **** TASK(tsk_background)
  79:source\asw/main.c **** {
 417              		.loc 1 79 0
 418              		.cfi_startproc
 419              		@ Volatile: function does not return.
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423              	.L22:
  80:source\asw/main.c ****     while(1)
  81:source\asw/main.c ****     {
  82:source\asw/main.c ****         //do something with low prioroty
  83:source\asw/main.c ****         __asm("nop");
 424              		.loc 1 83 0 discriminator 1
 425              		.syntax unified
 426              	@ 83 "source\asw\main.c" 1
 427 0000 00BF     		nop
 428              	@ 0 "" 2
 429              		.thumb
 430              		.syntax unified
 431 0002 FDE7     		b	.L22
 432              		.cfi_endproc
 433              	.LFE115:
 434              		.size	Functsk_background, .-Functsk_background
 435              		.text
 436              	.Letext0:
 437              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 438              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 439              		.file 8 "Generated_Source\\PSoC5/ErikaOS_common_ee_types.inc"
 440              		.file 9 "Generated_Source\\PSoC5/ErikaOS_ee_oo_intfunc.inc"
 441              		.file 10 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_context.inc"
 442              		.file 11 "Generated_Source\\PSoC5/ErikaOS_common_ee_primitives.inc"
 443              		.file 12 "Generated_Source\\PSoC5/core_cm3.h"
 444              		.file 13 "Generated_Source\\PSoC5/ErikaOS_ee_oo_kernel.inc"
 445              		.file 14 "Generated_Source\\PSoC5/ErikaOS_ee_oo_irq.inc"
 446              		.file 15 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_irq.inc"
 447              		.file 16 "Generated_Source\\PSoC5/UART_LOG.h"
 448              		.file 17 ".\\source\\bsw\\LabBoard/led.h"
 449              		.file 18 ".\\source\\bsw\\LabBoard/joystick.h"
 450              		.section	.debug_info,"",%progbits
 451              	.Ldebug_info0:
 452 0000 21050000 		.4byte	0x521
 453 0004 0400     		.2byte	0x4
 454 0006 00000000 		.4byte	.Ldebug_abbrev0
 455 000a 04       		.byte	0x4
 456 000b 01       		.uleb128 0x1
 457 000c AB040000 		.4byte	.LASF58
 458 0010 0C       		.byte	0xc
 459 0011 B9030000 		.4byte	.LASF59
 460 0015 FE000000 		.4byte	.LASF60
 461 0019 00000000 		.4byte	.Ldebug_ranges0+0
 462 001d 00000000 		.4byte	0
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 23


 463 0021 00000000 		.4byte	.Ldebug_line0
 464 0025 02       		.uleb128 0x2
 465 0026 01       		.byte	0x1
 466 0027 06       		.byte	0x6
 467 0028 9F020000 		.4byte	.LASF0
 468 002c 02       		.uleb128 0x2
 469 002d 01       		.byte	0x1
 470 002e 08       		.byte	0x8
 471 002f 51020000 		.4byte	.LASF1
 472 0033 02       		.uleb128 0x2
 473 0034 02       		.byte	0x2
 474 0035 05       		.byte	0x5
 475 0036 5D000000 		.4byte	.LASF2
 476 003a 02       		.uleb128 0x2
 477 003b 02       		.byte	0x2
 478 003c 07       		.byte	0x7
 479 003d 32030000 		.4byte	.LASF3
 480 0041 03       		.uleb128 0x3
 481 0042 AF030000 		.4byte	.LASF9
 482 0046 06       		.byte	0x6
 483 0047 3F       		.byte	0x3f
 484 0048 4C000000 		.4byte	0x4c
 485 004c 02       		.uleb128 0x2
 486 004d 04       		.byte	0x4
 487 004e 05       		.byte	0x5
 488 004f B0010000 		.4byte	.LASF4
 489 0053 02       		.uleb128 0x2
 490 0054 04       		.byte	0x4
 491 0055 07       		.byte	0x7
 492 0056 DE030000 		.4byte	.LASF5
 493 005a 02       		.uleb128 0x2
 494 005b 08       		.byte	0x8
 495 005c 05       		.byte	0x5
 496 005d 9D010000 		.4byte	.LASF6
 497 0061 02       		.uleb128 0x2
 498 0062 08       		.byte	0x8
 499 0063 07       		.byte	0x7
 500 0064 AB020000 		.4byte	.LASF7
 501 0068 04       		.uleb128 0x4
 502 0069 04       		.byte	0x4
 503 006a 05       		.byte	0x5
 504 006b 696E7400 		.ascii	"int\000"
 505 006f 02       		.uleb128 0x2
 506 0070 04       		.byte	0x4
 507 0071 07       		.byte	0x7
 508 0072 C2020000 		.4byte	.LASF8
 509 0076 03       		.uleb128 0x3
 510 0077 A7030000 		.4byte	.LASF10
 511 007b 07       		.byte	0x7
 512 007c 2C       		.byte	0x2c
 513 007d 41000000 		.4byte	0x41
 514 0081 02       		.uleb128 0x2
 515 0082 04       		.byte	0x4
 516 0083 04       		.byte	0x4
 517 0084 97010000 		.4byte	.LASF11
 518 0088 02       		.uleb128 0x2
 519 0089 08       		.byte	0x8
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 24


 520 008a 04       		.byte	0x4
 521 008b 87040000 		.4byte	.LASF12
 522 008f 02       		.uleb128 0x2
 523 0090 01       		.byte	0x1
 524 0091 08       		.byte	0x8
 525 0092 AB010000 		.4byte	.LASF13
 526 0096 02       		.uleb128 0x2
 527 0097 08       		.byte	0x8
 528 0098 04       		.byte	0x4
 529 0099 26020000 		.4byte	.LASF14
 530 009d 02       		.uleb128 0x2
 531 009e 04       		.byte	0x4
 532 009f 07       		.byte	0x7
 533 00a0 67000000 		.4byte	.LASF15
 534 00a4 03       		.uleb128 0x3
 535 00a5 02030000 		.4byte	.LASF16
 536 00a9 08       		.byte	0x8
 537 00aa 53       		.byte	0x53
 538 00ab 68000000 		.4byte	0x68
 539 00af 03       		.uleb128 0x3
 540 00b0 77020000 		.4byte	.LASF17
 541 00b4 08       		.byte	0x8
 542 00b5 54       		.byte	0x54
 543 00b6 6F000000 		.4byte	0x6f
 544 00ba 03       		.uleb128 0x3
 545 00bb 2D000000 		.4byte	.LASF18
 546 00bf 02       		.byte	0x2
 547 00c0 4D       		.byte	0x4d
 548 00c1 AF000000 		.4byte	0xaf
 549 00c5 03       		.uleb128 0x3
 550 00c6 70000000 		.4byte	.LASF19
 551 00ca 02       		.byte	0x2
 552 00cb 4F       		.byte	0x4f
 553 00cc AF000000 		.4byte	0xaf
 554 00d0 03       		.uleb128 0x3
 555 00d1 0F000000 		.4byte	.LASF20
 556 00d5 02       		.byte	0x2
 557 00d6 54       		.byte	0x54
 558 00d7 BA000000 		.4byte	0xba
 559 00db 03       		.uleb128 0x3
 560 00dc C5000000 		.4byte	.LASF21
 561 00e0 02       		.byte	0x2
 562 00e1 75       		.byte	0x75
 563 00e2 BA000000 		.4byte	0xba
 564 00e6 03       		.uleb128 0x3
 565 00e7 BE000000 		.4byte	.LASF22
 566 00eb 02       		.byte	0x2
 567 00ec 78       		.byte	0x78
 568 00ed A4000000 		.4byte	0xa4
 569 00f1 05       		.uleb128 0x5
 570 00f2 32020000 		.4byte	.LASF23
 571 00f6 03       		.byte	0x3
 572 00f7 55       		.byte	0x55
 573 00f8 03       		.byte	0x3
 574 00f9 06       		.uleb128 0x6
 575 00fa 6D040000 		.4byte	.LASF61
 576 00fe 02       		.byte	0x2
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 25


 577 00ff 5701     		.2byte	0x157
 578 0101 03       		.byte	0x3
 579 0102 13010000 		.4byte	0x113
 580 0106 07       		.uleb128 0x7
 581 0107 51050000 		.4byte	.LASF31
 582 010b 02       		.byte	0x2
 583 010c 5801     		.2byte	0x158
 584 010e DB000000 		.4byte	0xdb
 585 0112 00       		.byte	0
 586 0113 08       		.uleb128 0x8
 587 0114 0C020000 		.4byte	.LASF29
 588 0118 02       		.byte	0x2
 589 0119 2F01     		.2byte	0x12f
 590 011b DB000000 		.4byte	0xdb
 591 011f 03       		.byte	0x3
 592 0120 31010000 		.4byte	0x131
 593 0124 09       		.uleb128 0x9
 594 0125 51050000 		.4byte	.LASF31
 595 0129 02       		.byte	0x2
 596 012a 3401     		.2byte	0x134
 597 012c BA000000 		.4byte	0xba
 598 0130 00       		.byte	0
 599 0131 05       		.uleb128 0x5
 600 0132 5F020000 		.4byte	.LASF24
 601 0136 02       		.byte	0x2
 602 0137 C8       		.byte	0xc8
 603 0138 03       		.byte	0x3
 604 0139 0A       		.uleb128 0xa
 605 013a 13040000 		.4byte	.LASF62
 606 013e 03       		.byte	0x3
 607 013f 42       		.byte	0x42
 608 0140 D0000000 		.4byte	0xd0
 609 0144 03       		.byte	0x3
 610 0145 05       		.uleb128 0x5
 611 0146 56050000 		.4byte	.LASF25
 612 014a 03       		.byte	0x3
 613 014b 54       		.byte	0x54
 614 014c 03       		.byte	0x3
 615 014d 05       		.uleb128 0x5
 616 014e 44000000 		.4byte	.LASF26
 617 0152 03       		.byte	0x3
 618 0153 64       		.byte	0x64
 619 0154 03       		.byte	0x3
 620 0155 05       		.uleb128 0x5
 621 0156 56040000 		.4byte	.LASF27
 622 015a 02       		.byte	0x2
 623 015b B4       		.byte	0xb4
 624 015c 03       		.byte	0x3
 625 015d 05       		.uleb128 0x5
 626 015e 0B030000 		.4byte	.LASF28
 627 0162 04       		.byte	0x4
 628 0163 42       		.byte	0x42
 629 0164 03       		.byte	0x3
 630 0165 0B       		.uleb128 0xb
 631 0166 45030000 		.4byte	.LASF63
 632 016a 05       		.byte	0x5
 633 016b 68       		.byte	0x68
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 26


 634 016c 03       		.byte	0x3
 635 016d 0C       		.uleb128 0xc
 636 016e 5B030000 		.4byte	.LASF30
 637 0172 05       		.byte	0x5
 638 0173 89       		.byte	0x89
 639 0174 BA000000 		.4byte	0xba
 640 0178 03       		.byte	0x3
 641 0179 89010000 		.4byte	0x189
 642 017d 0D       		.uleb128 0xd
 643 017e E2020000 		.4byte	.LASF32
 644 0182 05       		.byte	0x5
 645 0183 89       		.byte	0x89
 646 0184 BA000000 		.4byte	0xba
 647 0188 00       		.byte	0
 648 0189 05       		.uleb128 0x5
 649 018a B9010000 		.4byte	.LASF33
 650 018e 05       		.byte	0x5
 651 018f 4F       		.byte	0x4f
 652 0190 03       		.byte	0x3
 653 0191 0E       		.uleb128 0xe
 654 0192 FE030000 		.4byte	.LASF36
 655 0196 01       		.byte	0x1
 656 0197 17       		.byte	0x17
 657 0198 00000000 		.4byte	.LFB111
 658 019c 0A000000 		.4byte	.LFE111-.LFB111
 659 01a0 01       		.uleb128 0x1
 660 01a1 9C       		.byte	0x9c
 661 01a2 B6010000 		.4byte	0x1b6
 662 01a6 0F       		.uleb128 0xf
 663 01a7 08000000 		.4byte	.LVL0
 664 01ab 91040000 		.4byte	0x491
 665 01af 10       		.uleb128 0x10
 666 01b0 01       		.uleb128 0x1
 667 01b1 50       		.byte	0x50
 668 01b2 01       		.uleb128 0x1
 669 01b3 30       		.byte	0x30
 670 01b4 00       		.byte	0
 671 01b5 00       		.byte	0
 672 01b6 08       		.uleb128 0x8
 673 01b7 A4000000 		.4byte	.LASF34
 674 01bb 02       		.byte	0x2
 675 01bc 6F01     		.2byte	0x16f
 676 01be DB000000 		.4byte	0xdb
 677 01c2 03       		.byte	0x3
 678 01c3 E0010000 		.4byte	0x1e0
 679 01c7 09       		.uleb128 0x9
 680 01c8 29040000 		.4byte	.LASF35
 681 01cc 02       		.byte	0x2
 682 01cd 7401     		.2byte	0x174
 683 01cf BA000000 		.4byte	0xba
 684 01d3 09       		.uleb128 0x9
 685 01d4 51050000 		.4byte	.LASF31
 686 01d8 02       		.byte	0x2
 687 01d9 7501     		.2byte	0x175
 688 01db DB000000 		.4byte	0xdb
 689 01df 00       		.byte	0
 690 01e0 0E       		.uleb128 0xe
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 27


 691 01e1 8E040000 		.4byte	.LASF37
 692 01e5 01       		.byte	0x1
 693 01e6 17       		.byte	0x17
 694 01e7 00000000 		.4byte	.LFB110
 695 01eb 98000000 		.4byte	.LFE110-.LFB110
 696 01ef 01       		.uleb128 0x1
 697 01f0 9C       		.byte	0x9c
 698 01f1 3D030000 		.4byte	0x33d
 699 01f5 11       		.uleb128 0x11
 700 01f6 69706C00 		.ascii	"ipl\000"
 701 01fa 01       		.byte	0x1
 702 01fb 17       		.byte	0x17
 703 01fc BA000000 		.4byte	0xba
 704 0200 00000000 		.4byte	.LLST0
 705 0204 12       		.uleb128 0x12
 706 0205 31010000 		.4byte	0x131
 707 0209 0A000000 		.4byte	.LBB56
 708 020d 02000000 		.4byte	.LBE56-.LBB56
 709 0211 01       		.byte	0x1
 710 0212 17       		.byte	0x17
 711 0213 13       		.uleb128 0x13
 712 0214 13010000 		.4byte	0x113
 713 0218 0C000000 		.4byte	.LBB58
 714 021c 04000000 		.4byte	.LBE58-.LBB58
 715 0220 01       		.byte	0x1
 716 0221 17       		.byte	0x17
 717 0222 36020000 		.4byte	0x236
 718 0226 14       		.uleb128 0x14
 719 0227 0C000000 		.4byte	.LBB59
 720 022b 04000000 		.4byte	.LBE59-.LBB59
 721 022f 15       		.uleb128 0x15
 722 0230 24010000 		.4byte	0x124
 723 0234 00       		.byte	0
 724 0235 00       		.byte	0
 725 0236 13       		.uleb128 0x13
 726 0237 B6010000 		.4byte	0x1b6
 727 023b 10000000 		.4byte	.LBB60
 728 023f 3A000000 		.4byte	.LBE60-.LBB60
 729 0243 01       		.byte	0x1
 730 0244 17       		.byte	0x17
 731 0245 66020000 		.4byte	0x266
 732 0249 14       		.uleb128 0x14
 733 024a 10000000 		.4byte	.LBB61
 734 024e 3A000000 		.4byte	.LBE61-.LBB61
 735 0252 16       		.uleb128 0x16
 736 0253 C7010000 		.4byte	0x1c7
 737 0257 14000000 		.4byte	.LLST1
 738 025b 16       		.uleb128 0x16
 739 025c D3010000 		.4byte	0x1d3
 740 0260 3D000000 		.4byte	.LLST2
 741 0264 00       		.byte	0
 742 0265 00       		.byte	0
 743 0266 13       		.uleb128 0x13
 744 0267 F9000000 		.4byte	0xf9
 745 026b 4A000000 		.4byte	.LBB62
 746 026f 04000000 		.4byte	.LBE62-.LBB62
 747 0273 01       		.byte	0x1
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 28


 748 0274 17       		.byte	0x17
 749 0275 7F020000 		.4byte	0x27f
 750 0279 17       		.uleb128 0x17
 751 027a 06010000 		.4byte	0x106
 752 027e 00       		.byte	0
 753 027f 12       		.uleb128 0x12
 754 0280 F1000000 		.4byte	0xf1
 755 0284 4E000000 		.4byte	.LBB64
 756 0288 08000000 		.4byte	.LBE64-.LBB64
 757 028c 01       		.byte	0x1
 758 028d 17       		.byte	0x17
 759 028e 12       		.uleb128 0x12
 760 028f 55010000 		.4byte	0x155
 761 0293 5E000000 		.4byte	.LBB66
 762 0297 02000000 		.4byte	.LBE66-.LBB66
 763 029b 01       		.byte	0x1
 764 029c 17       		.byte	0x17
 765 029d 12       		.uleb128 0x12
 766 029e 31010000 		.4byte	0x131
 767 02a2 64000000 		.4byte	.LBB68
 768 02a6 02000000 		.4byte	.LBE68-.LBB68
 769 02aa 01       		.byte	0x1
 770 02ab 17       		.byte	0x17
 771 02ac 13       		.uleb128 0x13
 772 02ad F9000000 		.4byte	0xf9
 773 02b1 66000000 		.4byte	.LBB70
 774 02b5 04000000 		.4byte	.LBE70-.LBB70
 775 02b9 01       		.byte	0x1
 776 02ba 17       		.byte	0x17
 777 02bb C9020000 		.4byte	0x2c9
 778 02bf 18       		.uleb128 0x18
 779 02c0 06010000 		.4byte	0x106
 780 02c4 7F000000 		.4byte	.LLST3
 781 02c8 00       		.byte	0
 782 02c9 13       		.uleb128 0x13
 783 02ca 4D010000 		.4byte	0x14d
 784 02ce 6A000000 		.4byte	.LBB72
 785 02d2 04000000 		.4byte	.LBE72-.LBB72
 786 02d6 01       		.byte	0x1
 787 02d7 17       		.byte	0x17
 788 02d8 E6020000 		.4byte	0x2e6
 789 02dc 19       		.uleb128 0x19
 790 02dd 6E000000 		.4byte	.LVL16
 791 02e1 9D040000 		.4byte	0x49d
 792 02e5 00       		.byte	0
 793 02e6 12       		.uleb128 0x12
 794 02e7 45010000 		.4byte	0x145
 795 02eb 6E000000 		.4byte	.LBB74
 796 02ef 08000000 		.4byte	.LBE74-.LBB74
 797 02f3 01       		.byte	0x1
 798 02f4 17       		.byte	0x17
 799 02f5 13       		.uleb128 0x13
 800 02f6 5D010000 		.4byte	0x15d
 801 02fa 7C000000 		.4byte	.LBB76
 802 02fe 04000000 		.4byte	.LBE76-.LBB76
 803 0302 01       		.byte	0x1
 804 0303 17       		.byte	0x17
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 29


 805 0304 12030000 		.4byte	0x312
 806 0308 19       		.uleb128 0x19
 807 0309 80000000 		.4byte	.LVL18
 808 030d A8040000 		.4byte	0x4a8
 809 0311 00       		.byte	0
 810 0312 12       		.uleb128 0x12
 811 0313 55010000 		.4byte	0x155
 812 0317 80000000 		.4byte	.LBB78
 813 031b 02000000 		.4byte	.LBE78-.LBB78
 814 031f 01       		.byte	0x1
 815 0320 17       		.byte	0x17
 816 0321 19       		.uleb128 0x19
 817 0322 5E000000 		.4byte	.LVL12
 818 0326 B3040000 		.4byte	0x4b3
 819 032a 19       		.uleb128 0x19
 820 032b 64000000 		.4byte	.LVL13
 821 032f 91010000 		.4byte	0x191
 822 0333 19       		.uleb128 0x19
 823 0334 7C000000 		.4byte	.LVL17
 824 0338 BE040000 		.4byte	0x4be
 825 033c 00       		.byte	0
 826 033d 1A       		.uleb128 0x1a
 827 033e 78000000 		.4byte	.LASF64
 828 0342 01       		.byte	0x1
 829 0343 1C       		.byte	0x1c
 830 0344 68000000 		.4byte	0x68
 831 0348 00000000 		.4byte	.LFB112
 832 034c 28000000 		.4byte	.LFE112-.LFB112
 833 0350 01       		.uleb128 0x1
 834 0351 9C       		.byte	0x9c
 835 0352 92030000 		.4byte	0x392
 836 0356 13       		.uleb128 0x13
 837 0357 6D010000 		.4byte	0x16d
 838 035b 04000000 		.4byte	.LBB80
 839 035f 06000000 		.4byte	.LBE80-.LBB80
 840 0363 01       		.byte	0x1
 841 0364 21       		.byte	0x21
 842 0365 73030000 		.4byte	0x373
 843 0369 18       		.uleb128 0x18
 844 036a 7D010000 		.4byte	0x17d
 845 036e 92000000 		.4byte	.LLST4
 846 0372 00       		.byte	0
 847 0373 12       		.uleb128 0x12
 848 0374 65010000 		.4byte	0x165
 849 0378 0A000000 		.4byte	.LBB82
 850 037c 0A000000 		.4byte	.LBE82-.LBB82
 851 0380 01       		.byte	0x1
 852 0381 22       		.byte	0x22
 853 0382 0F       		.uleb128 0xf
 854 0383 1A000000 		.4byte	.LVL21
 855 0387 C9040000 		.4byte	0x4c9
 856 038b 10       		.uleb128 0x10
 857 038c 01       		.uleb128 0x1
 858 038d 50       		.byte	0x50
 859 038e 01       		.uleb128 0x1
 860 038f 30       		.byte	0x30
 861 0390 00       		.byte	0
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 30


 862 0391 00       		.byte	0
 863 0392 1B       		.uleb128 0x1b
 864 0393 71030000 		.4byte	.LASF65
 865 0397 01       		.byte	0x1
 866 0398 29       		.byte	0x29
 867 0399 00000000 		.4byte	.LFB113
 868 039d 04000000 		.4byte	.LFE113-.LFB113
 869 03a1 01       		.uleb128 0x1
 870 03a2 9C       		.byte	0x9c
 871 03a3 0E       		.uleb128 0xe
 872 03a4 EC010000 		.4byte	.LASF38
 873 03a8 01       		.byte	0x1
 874 03a9 33       		.byte	0x33
 875 03aa 00000000 		.4byte	.LFB114
 876 03ae 3C000000 		.4byte	.LFE114-.LFB114
 877 03b2 01       		.uleb128 0x1
 878 03b3 9C       		.byte	0x9c
 879 03b4 38040000 		.4byte	0x438
 880 03b8 12       		.uleb128 0x12
 881 03b9 89010000 		.4byte	0x189
 882 03bd 12000000 		.4byte	.LBB84
 883 03c1 0A000000 		.4byte	.LBE84-.LBB84
 884 03c5 01       		.byte	0x1
 885 03c6 40       		.byte	0x40
 886 03c7 19       		.uleb128 0x19
 887 03c8 06000000 		.4byte	.LVL22
 888 03cc D5040000 		.4byte	0x4d5
 889 03d0 19       		.uleb128 0x19
 890 03d1 0A000000 		.4byte	.LVL23
 891 03d5 E0040000 		.4byte	0x4e0
 892 03d9 19       		.uleb128 0x19
 893 03da 0E000000 		.4byte	.LVL24
 894 03de EB040000 		.4byte	0x4eb
 895 03e2 19       		.uleb128 0x19
 896 03e3 12000000 		.4byte	.LVL25
 897 03e7 F6040000 		.4byte	0x4f6
 898 03eb 1C       		.uleb128 0x1c
 899 03ec 26000000 		.4byte	.LVL26
 900 03f0 02050000 		.4byte	0x502
 901 03f4 08040000 		.4byte	0x408
 902 03f8 10       		.uleb128 0x10
 903 03f9 01       		.uleb128 0x1
 904 03fa 50       		.byte	0x50
 905 03fb 01       		.uleb128 0x1
 906 03fc 30       		.byte	0x30
 907 03fd 10       		.uleb128 0x10
 908 03fe 01       		.uleb128 0x1
 909 03ff 51       		.byte	0x51
 910 0400 01       		.uleb128 0x1
 911 0401 31       		.byte	0x31
 912 0402 10       		.uleb128 0x10
 913 0403 01       		.uleb128 0x1
 914 0404 52       		.byte	0x52
 915 0405 01       		.uleb128 0x1
 916 0406 31       		.byte	0x31
 917 0407 00       		.byte	0
 918 0408 1C       		.uleb128 0x1c
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 31


 919 0409 2C000000 		.4byte	.LVL27
 920 040d 0E050000 		.4byte	0x50e
 921 0411 1B040000 		.4byte	0x41b
 922 0415 10       		.uleb128 0x10
 923 0416 01       		.uleb128 0x1
 924 0417 50       		.byte	0x50
 925 0418 01       		.uleb128 0x1
 926 0419 33       		.byte	0x33
 927 041a 00       		.byte	0
 928 041b 1C       		.uleb128 0x1c
 929 041c 32000000 		.4byte	.LVL28
 930 0420 0E050000 		.4byte	0x50e
 931 0424 2E040000 		.4byte	0x42e
 932 0428 10       		.uleb128 0x10
 933 0429 01       		.uleb128 0x1
 934 042a 50       		.byte	0x50
 935 042b 01       		.uleb128 0x1
 936 042c 31       		.byte	0x31
 937 042d 00       		.byte	0
 938 042e 19       		.uleb128 0x19
 939 042f 36000000 		.4byte	.LVL29
 940 0433 19050000 		.4byte	0x519
 941 0437 00       		.byte	0
 942 0438 1D       		.uleb128 0x1d
 943 0439 CF020000 		.4byte	.LASF66
 944 043d 01       		.byte	0x1
 945 043e 4E       		.byte	0x4e
 946 043f 00000000 		.4byte	.LFB115
 947 0443 04000000 		.4byte	.LFE115-.LFB115
 948 0447 01       		.uleb128 0x1
 949 0448 9C       		.byte	0x9c
 950 0449 1E       		.uleb128 0x1e
 951 044a 39050000 		.4byte	.LASF39
 952 044e 09       		.byte	0x9
 953 044f 40       		.byte	0x40
 954 0450 BA000000 		.4byte	0xba
 955 0454 1E       		.uleb128 0x1e
 956 0455 CA010000 		.4byte	.LASF40
 957 0459 09       		.byte	0x9
 958 045a 47       		.byte	0x47
 959 045b C5000000 		.4byte	0xc5
 960 045f 1E       		.uleb128 0x1e
 961 0460 CB030000 		.4byte	.LASF41
 962 0464 09       		.byte	0x9
 963 0465 4A       		.byte	0x4a
 964 0466 BA000000 		.4byte	0xba
 965 046a 1E       		.uleb128 0x1e
 966 046b E9020000 		.4byte	.LASF42
 967 046f 0A       		.byte	0xa
 968 0470 48       		.byte	0x48
 969 0471 E6000000 		.4byte	0xe6
 970 0475 1E       		.uleb128 0x1e
 971 0476 D5000000 		.4byte	.LASF43
 972 047a 0B       		.byte	0xb
 973 047b 44       		.byte	0x44
 974 047c BA000000 		.4byte	0xba
 975 0480 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 32


 976 0481 9E040000 		.4byte	.LASF44
 977 0485 0C       		.byte	0xc
 978 0486 1207     		.2byte	0x712
 979 0488 8C040000 		.4byte	0x48c
 980 048c 20       		.uleb128 0x20
 981 048d 76000000 		.4byte	0x76
 982 0491 21       		.uleb128 0x21
 983 0492 3F040000 		.4byte	.LASF45
 984 0496 3F040000 		.4byte	.LASF45
 985 049a 0D       		.byte	0xd
 986 049b A801     		.2byte	0x1a8
 987 049d 22       		.uleb128 0x22
 988 049e 8F000000 		.4byte	.LASF46
 989 04a2 8F000000 		.4byte	.LASF46
 990 04a6 0E       		.byte	0xe
 991 04a7 4B       		.byte	0x4b
 992 04a8 22       		.uleb128 0x22
 993 04a9 1B000000 		.4byte	.LASF47
 994 04ad 1B000000 		.4byte	.LASF47
 995 04b1 04       		.byte	0x4
 996 04b2 40       		.byte	0x40
 997 04b3 22       		.uleb128 0x22
 998 04b4 81020000 		.4byte	.LASF48
 999 04b8 81020000 		.4byte	.LASF48
 1000 04bc 0F       		.byte	0xf
 1001 04bd 68       		.byte	0x68
 1002 04be 22       		.uleb128 0x22
 1003 04bf 84030000 		.4byte	.LASF49
 1004 04c3 84030000 		.4byte	.LASF49
 1005 04c7 0F       		.byte	0xf
 1006 04c8 69       		.byte	0x69
 1007 04c9 21       		.uleb128 0x21
 1008 04ca F0030000 		.4byte	.LASF50
 1009 04ce F0030000 		.4byte	.LASF50
 1010 04d2 0D       		.byte	0xd
 1011 04d3 2C02     		.2byte	0x22c
 1012 04d5 22       		.uleb128 0x22
 1013 04d6 00000000 		.4byte	.LASF51
 1014 04da 00000000 		.4byte	.LASF51
 1015 04de 10       		.byte	0x10
 1016 04df 54       		.byte	0x54
 1017 04e0 22       		.uleb128 0x22
 1018 04e1 E3010000 		.4byte	.LASF52
 1019 04e5 E3010000 		.4byte	.LASF52
 1020 04e9 11       		.byte	0x11
 1021 04ea 8D       		.byte	0x8d
 1022 04eb 22       		.uleb128 0x22
 1023 04ec 31040000 		.4byte	.LASF53
 1024 04f0 31040000 		.4byte	.LASF53
 1025 04f4 12       		.byte	0x12
 1026 04f5 6D       		.byte	0x6d
 1027 04f6 21       		.uleb128 0x21
 1028 04f7 35000000 		.4byte	.LASF54
 1029 04fb 35000000 		.4byte	.LASF54
 1030 04ff 02       		.byte	0x2
 1031 0500 B101     		.2byte	0x1b1
 1032 0502 21       		.uleb128 0x21
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 33


 1033 0503 7D000000 		.4byte	.LASF55
 1034 0507 7D000000 		.4byte	.LASF55
 1035 050b 0D       		.byte	0xd
 1036 050c EF01     		.2byte	0x1ef
 1037 050e 22       		.uleb128 0x22
 1038 050f F9010000 		.4byte	.LASF56
 1039 0513 F9010000 		.4byte	.LASF56
 1040 0517 0D       		.byte	0xd
 1041 0518 9A       		.byte	0x9a
 1042 0519 22       		.uleb128 0x22
 1043 051a EA000000 		.4byte	.LASF57
 1044 051e EA000000 		.4byte	.LASF57
 1045 0522 0D       		.byte	0xd
 1046 0523 9F       		.byte	0x9f
 1047 0524 00       		.byte	0
 1048              		.section	.debug_abbrev,"",%progbits
 1049              	.Ldebug_abbrev0:
 1050 0000 01       		.uleb128 0x1
 1051 0001 11       		.uleb128 0x11
 1052 0002 01       		.byte	0x1
 1053 0003 25       		.uleb128 0x25
 1054 0004 0E       		.uleb128 0xe
 1055 0005 13       		.uleb128 0x13
 1056 0006 0B       		.uleb128 0xb
 1057 0007 03       		.uleb128 0x3
 1058 0008 0E       		.uleb128 0xe
 1059 0009 1B       		.uleb128 0x1b
 1060 000a 0E       		.uleb128 0xe
 1061 000b 55       		.uleb128 0x55
 1062 000c 17       		.uleb128 0x17
 1063 000d 11       		.uleb128 0x11
 1064 000e 01       		.uleb128 0x1
 1065 000f 10       		.uleb128 0x10
 1066 0010 17       		.uleb128 0x17
 1067 0011 00       		.byte	0
 1068 0012 00       		.byte	0
 1069 0013 02       		.uleb128 0x2
 1070 0014 24       		.uleb128 0x24
 1071 0015 00       		.byte	0
 1072 0016 0B       		.uleb128 0xb
 1073 0017 0B       		.uleb128 0xb
 1074 0018 3E       		.uleb128 0x3e
 1075 0019 0B       		.uleb128 0xb
 1076 001a 03       		.uleb128 0x3
 1077 001b 0E       		.uleb128 0xe
 1078 001c 00       		.byte	0
 1079 001d 00       		.byte	0
 1080 001e 03       		.uleb128 0x3
 1081 001f 16       		.uleb128 0x16
 1082 0020 00       		.byte	0
 1083 0021 03       		.uleb128 0x3
 1084 0022 0E       		.uleb128 0xe
 1085 0023 3A       		.uleb128 0x3a
 1086 0024 0B       		.uleb128 0xb
 1087 0025 3B       		.uleb128 0x3b
 1088 0026 0B       		.uleb128 0xb
 1089 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 34


 1090 0028 13       		.uleb128 0x13
 1091 0029 00       		.byte	0
 1092 002a 00       		.byte	0
 1093 002b 04       		.uleb128 0x4
 1094 002c 24       		.uleb128 0x24
 1095 002d 00       		.byte	0
 1096 002e 0B       		.uleb128 0xb
 1097 002f 0B       		.uleb128 0xb
 1098 0030 3E       		.uleb128 0x3e
 1099 0031 0B       		.uleb128 0xb
 1100 0032 03       		.uleb128 0x3
 1101 0033 08       		.uleb128 0x8
 1102 0034 00       		.byte	0
 1103 0035 00       		.byte	0
 1104 0036 05       		.uleb128 0x5
 1105 0037 2E       		.uleb128 0x2e
 1106 0038 00       		.byte	0
 1107 0039 03       		.uleb128 0x3
 1108 003a 0E       		.uleb128 0xe
 1109 003b 3A       		.uleb128 0x3a
 1110 003c 0B       		.uleb128 0xb
 1111 003d 3B       		.uleb128 0x3b
 1112 003e 0B       		.uleb128 0xb
 1113 003f 27       		.uleb128 0x27
 1114 0040 19       		.uleb128 0x19
 1115 0041 20       		.uleb128 0x20
 1116 0042 0B       		.uleb128 0xb
 1117 0043 00       		.byte	0
 1118 0044 00       		.byte	0
 1119 0045 06       		.uleb128 0x6
 1120 0046 2E       		.uleb128 0x2e
 1121 0047 01       		.byte	0x1
 1122 0048 03       		.uleb128 0x3
 1123 0049 0E       		.uleb128 0xe
 1124 004a 3A       		.uleb128 0x3a
 1125 004b 0B       		.uleb128 0xb
 1126 004c 3B       		.uleb128 0x3b
 1127 004d 05       		.uleb128 0x5
 1128 004e 27       		.uleb128 0x27
 1129 004f 19       		.uleb128 0x19
 1130 0050 20       		.uleb128 0x20
 1131 0051 0B       		.uleb128 0xb
 1132 0052 01       		.uleb128 0x1
 1133 0053 13       		.uleb128 0x13
 1134 0054 00       		.byte	0
 1135 0055 00       		.byte	0
 1136 0056 07       		.uleb128 0x7
 1137 0057 05       		.uleb128 0x5
 1138 0058 00       		.byte	0
 1139 0059 03       		.uleb128 0x3
 1140 005a 0E       		.uleb128 0xe
 1141 005b 3A       		.uleb128 0x3a
 1142 005c 0B       		.uleb128 0xb
 1143 005d 3B       		.uleb128 0x3b
 1144 005e 05       		.uleb128 0x5
 1145 005f 49       		.uleb128 0x49
 1146 0060 13       		.uleb128 0x13
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 35


 1147 0061 00       		.byte	0
 1148 0062 00       		.byte	0
 1149 0063 08       		.uleb128 0x8
 1150 0064 2E       		.uleb128 0x2e
 1151 0065 01       		.byte	0x1
 1152 0066 03       		.uleb128 0x3
 1153 0067 0E       		.uleb128 0xe
 1154 0068 3A       		.uleb128 0x3a
 1155 0069 0B       		.uleb128 0xb
 1156 006a 3B       		.uleb128 0x3b
 1157 006b 05       		.uleb128 0x5
 1158 006c 27       		.uleb128 0x27
 1159 006d 19       		.uleb128 0x19
 1160 006e 49       		.uleb128 0x49
 1161 006f 13       		.uleb128 0x13
 1162 0070 20       		.uleb128 0x20
 1163 0071 0B       		.uleb128 0xb
 1164 0072 01       		.uleb128 0x1
 1165 0073 13       		.uleb128 0x13
 1166 0074 00       		.byte	0
 1167 0075 00       		.byte	0
 1168 0076 09       		.uleb128 0x9
 1169 0077 34       		.uleb128 0x34
 1170 0078 00       		.byte	0
 1171 0079 03       		.uleb128 0x3
 1172 007a 0E       		.uleb128 0xe
 1173 007b 3A       		.uleb128 0x3a
 1174 007c 0B       		.uleb128 0xb
 1175 007d 3B       		.uleb128 0x3b
 1176 007e 05       		.uleb128 0x5
 1177 007f 49       		.uleb128 0x49
 1178 0080 13       		.uleb128 0x13
 1179 0081 00       		.byte	0
 1180 0082 00       		.byte	0
 1181 0083 0A       		.uleb128 0xa
 1182 0084 2E       		.uleb128 0x2e
 1183 0085 00       		.byte	0
 1184 0086 03       		.uleb128 0x3
 1185 0087 0E       		.uleb128 0xe
 1186 0088 3A       		.uleb128 0x3a
 1187 0089 0B       		.uleb128 0xb
 1188 008a 3B       		.uleb128 0x3b
 1189 008b 0B       		.uleb128 0xb
 1190 008c 27       		.uleb128 0x27
 1191 008d 19       		.uleb128 0x19
 1192 008e 49       		.uleb128 0x49
 1193 008f 13       		.uleb128 0x13
 1194 0090 20       		.uleb128 0x20
 1195 0091 0B       		.uleb128 0xb
 1196 0092 00       		.byte	0
 1197 0093 00       		.byte	0
 1198 0094 0B       		.uleb128 0xb
 1199 0095 2E       		.uleb128 0x2e
 1200 0096 00       		.byte	0
 1201 0097 03       		.uleb128 0x3
 1202 0098 0E       		.uleb128 0xe
 1203 0099 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 36


 1204 009a 0B       		.uleb128 0xb
 1205 009b 3B       		.uleb128 0x3b
 1206 009c 0B       		.uleb128 0xb
 1207 009d 20       		.uleb128 0x20
 1208 009e 0B       		.uleb128 0xb
 1209 009f 00       		.byte	0
 1210 00a0 00       		.byte	0
 1211 00a1 0C       		.uleb128 0xc
 1212 00a2 2E       		.uleb128 0x2e
 1213 00a3 01       		.byte	0x1
 1214 00a4 03       		.uleb128 0x3
 1215 00a5 0E       		.uleb128 0xe
 1216 00a6 3A       		.uleb128 0x3a
 1217 00a7 0B       		.uleb128 0xb
 1218 00a8 3B       		.uleb128 0x3b
 1219 00a9 0B       		.uleb128 0xb
 1220 00aa 27       		.uleb128 0x27
 1221 00ab 19       		.uleb128 0x19
 1222 00ac 49       		.uleb128 0x49
 1223 00ad 13       		.uleb128 0x13
 1224 00ae 20       		.uleb128 0x20
 1225 00af 0B       		.uleb128 0xb
 1226 00b0 01       		.uleb128 0x1
 1227 00b1 13       		.uleb128 0x13
 1228 00b2 00       		.byte	0
 1229 00b3 00       		.byte	0
 1230 00b4 0D       		.uleb128 0xd
 1231 00b5 05       		.uleb128 0x5
 1232 00b6 00       		.byte	0
 1233 00b7 03       		.uleb128 0x3
 1234 00b8 0E       		.uleb128 0xe
 1235 00b9 3A       		.uleb128 0x3a
 1236 00ba 0B       		.uleb128 0xb
 1237 00bb 3B       		.uleb128 0x3b
 1238 00bc 0B       		.uleb128 0xb
 1239 00bd 49       		.uleb128 0x49
 1240 00be 13       		.uleb128 0x13
 1241 00bf 00       		.byte	0
 1242 00c0 00       		.byte	0
 1243 00c1 0E       		.uleb128 0xe
 1244 00c2 2E       		.uleb128 0x2e
 1245 00c3 01       		.byte	0x1
 1246 00c4 3F       		.uleb128 0x3f
 1247 00c5 19       		.uleb128 0x19
 1248 00c6 03       		.uleb128 0x3
 1249 00c7 0E       		.uleb128 0xe
 1250 00c8 3A       		.uleb128 0x3a
 1251 00c9 0B       		.uleb128 0xb
 1252 00ca 3B       		.uleb128 0x3b
 1253 00cb 0B       		.uleb128 0xb
 1254 00cc 27       		.uleb128 0x27
 1255 00cd 19       		.uleb128 0x19
 1256 00ce 11       		.uleb128 0x11
 1257 00cf 01       		.uleb128 0x1
 1258 00d0 12       		.uleb128 0x12
 1259 00d1 06       		.uleb128 0x6
 1260 00d2 40       		.uleb128 0x40
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 37


 1261 00d3 18       		.uleb128 0x18
 1262 00d4 9742     		.uleb128 0x2117
 1263 00d6 19       		.uleb128 0x19
 1264 00d7 01       		.uleb128 0x1
 1265 00d8 13       		.uleb128 0x13
 1266 00d9 00       		.byte	0
 1267 00da 00       		.byte	0
 1268 00db 0F       		.uleb128 0xf
 1269 00dc 898201   		.uleb128 0x4109
 1270 00df 01       		.byte	0x1
 1271 00e0 11       		.uleb128 0x11
 1272 00e1 01       		.uleb128 0x1
 1273 00e2 31       		.uleb128 0x31
 1274 00e3 13       		.uleb128 0x13
 1275 00e4 00       		.byte	0
 1276 00e5 00       		.byte	0
 1277 00e6 10       		.uleb128 0x10
 1278 00e7 8A8201   		.uleb128 0x410a
 1279 00ea 00       		.byte	0
 1280 00eb 02       		.uleb128 0x2
 1281 00ec 18       		.uleb128 0x18
 1282 00ed 9142     		.uleb128 0x2111
 1283 00ef 18       		.uleb128 0x18
 1284 00f0 00       		.byte	0
 1285 00f1 00       		.byte	0
 1286 00f2 11       		.uleb128 0x11
 1287 00f3 34       		.uleb128 0x34
 1288 00f4 00       		.byte	0
 1289 00f5 03       		.uleb128 0x3
 1290 00f6 08       		.uleb128 0x8
 1291 00f7 3A       		.uleb128 0x3a
 1292 00f8 0B       		.uleb128 0xb
 1293 00f9 3B       		.uleb128 0x3b
 1294 00fa 0B       		.uleb128 0xb
 1295 00fb 49       		.uleb128 0x49
 1296 00fc 13       		.uleb128 0x13
 1297 00fd 02       		.uleb128 0x2
 1298 00fe 17       		.uleb128 0x17
 1299 00ff 00       		.byte	0
 1300 0100 00       		.byte	0
 1301 0101 12       		.uleb128 0x12
 1302 0102 1D       		.uleb128 0x1d
 1303 0103 00       		.byte	0
 1304 0104 31       		.uleb128 0x31
 1305 0105 13       		.uleb128 0x13
 1306 0106 11       		.uleb128 0x11
 1307 0107 01       		.uleb128 0x1
 1308 0108 12       		.uleb128 0x12
 1309 0109 06       		.uleb128 0x6
 1310 010a 58       		.uleb128 0x58
 1311 010b 0B       		.uleb128 0xb
 1312 010c 59       		.uleb128 0x59
 1313 010d 0B       		.uleb128 0xb
 1314 010e 00       		.byte	0
 1315 010f 00       		.byte	0
 1316 0110 13       		.uleb128 0x13
 1317 0111 1D       		.uleb128 0x1d
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 38


 1318 0112 01       		.byte	0x1
 1319 0113 31       		.uleb128 0x31
 1320 0114 13       		.uleb128 0x13
 1321 0115 11       		.uleb128 0x11
 1322 0116 01       		.uleb128 0x1
 1323 0117 12       		.uleb128 0x12
 1324 0118 06       		.uleb128 0x6
 1325 0119 58       		.uleb128 0x58
 1326 011a 0B       		.uleb128 0xb
 1327 011b 59       		.uleb128 0x59
 1328 011c 0B       		.uleb128 0xb
 1329 011d 01       		.uleb128 0x1
 1330 011e 13       		.uleb128 0x13
 1331 011f 00       		.byte	0
 1332 0120 00       		.byte	0
 1333 0121 14       		.uleb128 0x14
 1334 0122 0B       		.uleb128 0xb
 1335 0123 01       		.byte	0x1
 1336 0124 11       		.uleb128 0x11
 1337 0125 01       		.uleb128 0x1
 1338 0126 12       		.uleb128 0x12
 1339 0127 06       		.uleb128 0x6
 1340 0128 00       		.byte	0
 1341 0129 00       		.byte	0
 1342 012a 15       		.uleb128 0x15
 1343 012b 34       		.uleb128 0x34
 1344 012c 00       		.byte	0
 1345 012d 31       		.uleb128 0x31
 1346 012e 13       		.uleb128 0x13
 1347 012f 00       		.byte	0
 1348 0130 00       		.byte	0
 1349 0131 16       		.uleb128 0x16
 1350 0132 34       		.uleb128 0x34
 1351 0133 00       		.byte	0
 1352 0134 31       		.uleb128 0x31
 1353 0135 13       		.uleb128 0x13
 1354 0136 02       		.uleb128 0x2
 1355 0137 17       		.uleb128 0x17
 1356 0138 00       		.byte	0
 1357 0139 00       		.byte	0
 1358 013a 17       		.uleb128 0x17
 1359 013b 05       		.uleb128 0x5
 1360 013c 00       		.byte	0
 1361 013d 31       		.uleb128 0x31
 1362 013e 13       		.uleb128 0x13
 1363 013f 00       		.byte	0
 1364 0140 00       		.byte	0
 1365 0141 18       		.uleb128 0x18
 1366 0142 05       		.uleb128 0x5
 1367 0143 00       		.byte	0
 1368 0144 31       		.uleb128 0x31
 1369 0145 13       		.uleb128 0x13
 1370 0146 02       		.uleb128 0x2
 1371 0147 17       		.uleb128 0x17
 1372 0148 00       		.byte	0
 1373 0149 00       		.byte	0
 1374 014a 19       		.uleb128 0x19
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 39


 1375 014b 898201   		.uleb128 0x4109
 1376 014e 00       		.byte	0
 1377 014f 11       		.uleb128 0x11
 1378 0150 01       		.uleb128 0x1
 1379 0151 31       		.uleb128 0x31
 1380 0152 13       		.uleb128 0x13
 1381 0153 00       		.byte	0
 1382 0154 00       		.byte	0
 1383 0155 1A       		.uleb128 0x1a
 1384 0156 2E       		.uleb128 0x2e
 1385 0157 01       		.byte	0x1
 1386 0158 3F       		.uleb128 0x3f
 1387 0159 19       		.uleb128 0x19
 1388 015a 03       		.uleb128 0x3
 1389 015b 0E       		.uleb128 0xe
 1390 015c 3A       		.uleb128 0x3a
 1391 015d 0B       		.uleb128 0xb
 1392 015e 3B       		.uleb128 0x3b
 1393 015f 0B       		.uleb128 0xb
 1394 0160 49       		.uleb128 0x49
 1395 0161 13       		.uleb128 0x13
 1396 0162 8701     		.uleb128 0x87
 1397 0164 19       		.uleb128 0x19
 1398 0165 11       		.uleb128 0x11
 1399 0166 01       		.uleb128 0x1
 1400 0167 12       		.uleb128 0x12
 1401 0168 06       		.uleb128 0x6
 1402 0169 40       		.uleb128 0x40
 1403 016a 18       		.uleb128 0x18
 1404 016b 9742     		.uleb128 0x2117
 1405 016d 19       		.uleb128 0x19
 1406 016e 01       		.uleb128 0x1
 1407 016f 13       		.uleb128 0x13
 1408 0170 00       		.byte	0
 1409 0171 00       		.byte	0
 1410 0172 1B       		.uleb128 0x1b
 1411 0173 2E       		.uleb128 0x2e
 1412 0174 00       		.byte	0
 1413 0175 3F       		.uleb128 0x3f
 1414 0176 19       		.uleb128 0x19
 1415 0177 03       		.uleb128 0x3
 1416 0178 0E       		.uleb128 0xe
 1417 0179 3A       		.uleb128 0x3a
 1418 017a 0B       		.uleb128 0xb
 1419 017b 3B       		.uleb128 0x3b
 1420 017c 0B       		.uleb128 0xb
 1421 017d 11       		.uleb128 0x11
 1422 017e 01       		.uleb128 0x1
 1423 017f 12       		.uleb128 0x12
 1424 0180 06       		.uleb128 0x6
 1425 0181 40       		.uleb128 0x40
 1426 0182 18       		.uleb128 0x18
 1427 0183 9742     		.uleb128 0x2117
 1428 0185 19       		.uleb128 0x19
 1429 0186 00       		.byte	0
 1430 0187 00       		.byte	0
 1431 0188 1C       		.uleb128 0x1c
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 40


 1432 0189 898201   		.uleb128 0x4109
 1433 018c 01       		.byte	0x1
 1434 018d 11       		.uleb128 0x11
 1435 018e 01       		.uleb128 0x1
 1436 018f 31       		.uleb128 0x31
 1437 0190 13       		.uleb128 0x13
 1438 0191 01       		.uleb128 0x1
 1439 0192 13       		.uleb128 0x13
 1440 0193 00       		.byte	0
 1441 0194 00       		.byte	0
 1442 0195 1D       		.uleb128 0x1d
 1443 0196 2E       		.uleb128 0x2e
 1444 0197 00       		.byte	0
 1445 0198 3F       		.uleb128 0x3f
 1446 0199 19       		.uleb128 0x19
 1447 019a 03       		.uleb128 0x3
 1448 019b 0E       		.uleb128 0xe
 1449 019c 3A       		.uleb128 0x3a
 1450 019d 0B       		.uleb128 0xb
 1451 019e 3B       		.uleb128 0x3b
 1452 019f 0B       		.uleb128 0xb
 1453 01a0 27       		.uleb128 0x27
 1454 01a1 19       		.uleb128 0x19
 1455 01a2 8701     		.uleb128 0x87
 1456 01a4 19       		.uleb128 0x19
 1457 01a5 11       		.uleb128 0x11
 1458 01a6 01       		.uleb128 0x1
 1459 01a7 12       		.uleb128 0x12
 1460 01a8 06       		.uleb128 0x6
 1461 01a9 40       		.uleb128 0x40
 1462 01aa 18       		.uleb128 0x18
 1463 01ab 9742     		.uleb128 0x2117
 1464 01ad 19       		.uleb128 0x19
 1465 01ae 00       		.byte	0
 1466 01af 00       		.byte	0
 1467 01b0 1E       		.uleb128 0x1e
 1468 01b1 34       		.uleb128 0x34
 1469 01b2 00       		.byte	0
 1470 01b3 03       		.uleb128 0x3
 1471 01b4 0E       		.uleb128 0xe
 1472 01b5 3A       		.uleb128 0x3a
 1473 01b6 0B       		.uleb128 0xb
 1474 01b7 3B       		.uleb128 0x3b
 1475 01b8 0B       		.uleb128 0xb
 1476 01b9 49       		.uleb128 0x49
 1477 01ba 13       		.uleb128 0x13
 1478 01bb 3F       		.uleb128 0x3f
 1479 01bc 19       		.uleb128 0x19
 1480 01bd 3C       		.uleb128 0x3c
 1481 01be 19       		.uleb128 0x19
 1482 01bf 00       		.byte	0
 1483 01c0 00       		.byte	0
 1484 01c1 1F       		.uleb128 0x1f
 1485 01c2 34       		.uleb128 0x34
 1486 01c3 00       		.byte	0
 1487 01c4 03       		.uleb128 0x3
 1488 01c5 0E       		.uleb128 0xe
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 41


 1489 01c6 3A       		.uleb128 0x3a
 1490 01c7 0B       		.uleb128 0xb
 1491 01c8 3B       		.uleb128 0x3b
 1492 01c9 05       		.uleb128 0x5
 1493 01ca 49       		.uleb128 0x49
 1494 01cb 13       		.uleb128 0x13
 1495 01cc 3F       		.uleb128 0x3f
 1496 01cd 19       		.uleb128 0x19
 1497 01ce 3C       		.uleb128 0x3c
 1498 01cf 19       		.uleb128 0x19
 1499 01d0 00       		.byte	0
 1500 01d1 00       		.byte	0
 1501 01d2 20       		.uleb128 0x20
 1502 01d3 35       		.uleb128 0x35
 1503 01d4 00       		.byte	0
 1504 01d5 49       		.uleb128 0x49
 1505 01d6 13       		.uleb128 0x13
 1506 01d7 00       		.byte	0
 1507 01d8 00       		.byte	0
 1508 01d9 21       		.uleb128 0x21
 1509 01da 2E       		.uleb128 0x2e
 1510 01db 00       		.byte	0
 1511 01dc 3F       		.uleb128 0x3f
 1512 01dd 19       		.uleb128 0x19
 1513 01de 3C       		.uleb128 0x3c
 1514 01df 19       		.uleb128 0x19
 1515 01e0 6E       		.uleb128 0x6e
 1516 01e1 0E       		.uleb128 0xe
 1517 01e2 03       		.uleb128 0x3
 1518 01e3 0E       		.uleb128 0xe
 1519 01e4 3A       		.uleb128 0x3a
 1520 01e5 0B       		.uleb128 0xb
 1521 01e6 3B       		.uleb128 0x3b
 1522 01e7 05       		.uleb128 0x5
 1523 01e8 00       		.byte	0
 1524 01e9 00       		.byte	0
 1525 01ea 22       		.uleb128 0x22
 1526 01eb 2E       		.uleb128 0x2e
 1527 01ec 00       		.byte	0
 1528 01ed 3F       		.uleb128 0x3f
 1529 01ee 19       		.uleb128 0x19
 1530 01ef 3C       		.uleb128 0x3c
 1531 01f0 19       		.uleb128 0x19
 1532 01f1 6E       		.uleb128 0x6e
 1533 01f2 0E       		.uleb128 0xe
 1534 01f3 03       		.uleb128 0x3
 1535 01f4 0E       		.uleb128 0xe
 1536 01f5 3A       		.uleb128 0x3a
 1537 01f6 0B       		.uleb128 0xb
 1538 01f7 3B       		.uleb128 0x3b
 1539 01f8 0B       		.uleb128 0xb
 1540 01f9 00       		.byte	0
 1541 01fa 00       		.byte	0
 1542 01fb 00       		.byte	0
 1543              		.section	.debug_loc,"",%progbits
 1544              	.Ldebug_loc0:
 1545              	.LLST0:
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 42


 1546 0000 0A000000 		.4byte	.LVL1
 1547 0004 10000000 		.4byte	.LVL2
 1548 0008 0200     		.2byte	0x2
 1549 000a 30       		.byte	0x30
 1550 000b 9F       		.byte	0x9f
 1551 000c 00000000 		.4byte	0
 1552 0010 00000000 		.4byte	0
 1553              	.LLST1:
 1554 0014 16000000 		.4byte	.LVL3
 1555 0018 2C000000 		.4byte	.LVL5
 1556 001c 0100     		.2byte	0x1
 1557 001e 53       		.byte	0x53
 1558 001f 3C000000 		.4byte	.LVL7
 1559 0023 42000000 		.4byte	.LVL8
 1560 0027 0100     		.2byte	0x1
 1561 0029 53       		.byte	0x53
 1562 002a 48000000 		.4byte	.LVL10
 1563 002e 4A000000 		.4byte	.LVL11
 1564 0032 0100     		.2byte	0x1
 1565 0034 53       		.byte	0x53
 1566 0035 00000000 		.4byte	0
 1567 0039 00000000 		.4byte	0
 1568              	.LLST2:
 1569 003d 16000000 		.4byte	.LVL3
 1570 0041 3A000000 		.4byte	.LVL6
 1571 0045 0200     		.2byte	0x2
 1572 0047 30       		.byte	0x30
 1573 0048 9F       		.byte	0x9f
 1574 0049 3A000000 		.4byte	.LVL6
 1575 004d 3C000000 		.4byte	.LVL7
 1576 0051 0100     		.2byte	0x1
 1577 0053 53       		.byte	0x53
 1578 0054 3C000000 		.4byte	.LVL7
 1579 0058 46000000 		.4byte	.LVL9
 1580 005c 0200     		.2byte	0x2
 1581 005e 30       		.byte	0x30
 1582 005f 9F       		.byte	0x9f
 1583 0060 46000000 		.4byte	.LVL9
 1584 0064 48000000 		.4byte	.LVL10
 1585 0068 0100     		.2byte	0x1
 1586 006a 53       		.byte	0x53
 1587 006b 48000000 		.4byte	.LVL10
 1588 006f 4A000000 		.4byte	.LVL11
 1589 0073 0200     		.2byte	0x2
 1590 0075 30       		.byte	0x30
 1591 0076 9F       		.byte	0x9f
 1592 0077 00000000 		.4byte	0
 1593 007b 00000000 		.4byte	0
 1594              	.LLST3:
 1595 007f 66000000 		.4byte	.LVL14
 1596 0083 6A000000 		.4byte	.LVL15
 1597 0087 0100     		.2byte	0x1
 1598 0089 54       		.byte	0x54
 1599 008a 00000000 		.4byte	0
 1600 008e 00000000 		.4byte	0
 1601              	.LLST4:
 1602 0092 04000000 		.4byte	.LVL19
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 43


 1603 0096 0A000000 		.4byte	.LVL20
 1604 009a 0600     		.2byte	0x6
 1605 009c 0C       		.byte	0xc
 1606 009d 40190100 		.4byte	0x11940
 1607 00a1 9F       		.byte	0x9f
 1608 00a2 00000000 		.4byte	0
 1609 00a6 00000000 		.4byte	0
 1610              		.section	.debug_aranges,"",%progbits
 1611 0000 44000000 		.4byte	0x44
 1612 0004 0200     		.2byte	0x2
 1613 0006 00000000 		.4byte	.Ldebug_info0
 1614 000a 04       		.byte	0x4
 1615 000b 00       		.byte	0
 1616 000c 0000     		.2byte	0
 1617 000e 0000     		.2byte	0
 1618 0010 00000000 		.4byte	.LFB111
 1619 0014 0A000000 		.4byte	.LFE111-.LFB111
 1620 0018 00000000 		.4byte	.LFB110
 1621 001c 98000000 		.4byte	.LFE110-.LFB110
 1622 0020 00000000 		.4byte	.LFB112
 1623 0024 28000000 		.4byte	.LFE112-.LFB112
 1624 0028 00000000 		.4byte	.LFB113
 1625 002c 04000000 		.4byte	.LFE113-.LFB113
 1626 0030 00000000 		.4byte	.LFB114
 1627 0034 3C000000 		.4byte	.LFE114-.LFB114
 1628 0038 00000000 		.4byte	.LFB115
 1629 003c 04000000 		.4byte	.LFE115-.LFB115
 1630 0040 00000000 		.4byte	0
 1631 0044 00000000 		.4byte	0
 1632              		.section	.debug_ranges,"",%progbits
 1633              	.Ldebug_ranges0:
 1634 0000 00000000 		.4byte	.LFB111
 1635 0004 0A000000 		.4byte	.LFE111
 1636 0008 00000000 		.4byte	.LFB110
 1637 000c 98000000 		.4byte	.LFE110
 1638 0010 00000000 		.4byte	.LFB112
 1639 0014 28000000 		.4byte	.LFE112
 1640 0018 00000000 		.4byte	.LFB113
 1641 001c 04000000 		.4byte	.LFE113
 1642 0020 00000000 		.4byte	.LFB114
 1643 0024 3C000000 		.4byte	.LFE114
 1644 0028 00000000 		.4byte	.LFB115
 1645 002c 04000000 		.4byte	.LFE115
 1646 0030 00000000 		.4byte	0
 1647 0034 00000000 		.4byte	0
 1648              		.section	.debug_line,"",%progbits
 1649              	.Ldebug_line0:
 1650 0000 07040000 		.section	.debug_str,"MS",%progbits,1
 1650      0200EC02 
 1650      00000201 
 1650      FB0E0D00 
 1650      01010101 
 1651              	.LASF51:
 1652 0000 55415254 		.ascii	"UART_LOG_Start\000"
 1652      5F4C4F47 
 1652      5F537461 
 1652      727400
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 44


 1653              	.LASF20:
 1654 000f 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1654      59504542 
 1654      4F4F4C00 
 1655              	.LASF47:
 1656 001b 45455F73 		.ascii	"EE_switch_context\000"
 1656      77697463 
 1656      685F636F 
 1656      6E746578 
 1656      7400
 1657              	.LASF18:
 1658 002d 45455F55 		.ascii	"EE_UREG\000"
 1658      52454700 
 1659              	.LASF54:
 1660 0035 45455F73 		.ascii	"EE_system_init\000"
 1660      79737465 
 1660      6D5F696E 
 1660      697400
 1661              	.LASF26:
 1662 0044 45455F73 		.ascii	"EE_std_end_IRQ_post_stub\000"
 1662      74645F65 
 1662      6E645F49 
 1662      52515F70 
 1662      6F73745F 
 1663              	.LASF2:
 1664 005d 73686F72 		.ascii	"short int\000"
 1664      7420696E 
 1664      7400
 1665              	.LASF15:
 1666 0067 73697A65 		.ascii	"sizetype\000"
 1666      74797065 
 1666      00
 1667              	.LASF19:
 1668 0070 45455F46 		.ascii	"EE_FREG\000"
 1668      52454700 
 1669              	.LASF64:
 1670 0078 6D61696E 		.ascii	"main\000"
 1670      00
 1671              	.LASF55:
 1672 007d 45455F6F 		.ascii	"EE_oo_SetRelAlarm\000"
 1672      6F5F5365 
 1672      7452656C 
 1672      416C6172 
 1672      6D00
 1673              	.LASF46:
 1674 008f 45455F49 		.ascii	"EE_IRQ_end_post_stub\000"
 1674      52515F65 
 1674      6E645F70 
 1674      6F73745F 
 1674      73747562 
 1675              	.LASF34:
 1676 00a4 45455F63 		.ascii	"EE_cortex_mx_get_isr_prio\000"
 1676      6F727465 
 1676      785F6D78 
 1676      5F676574 
 1676      5F697372 
 1677              	.LASF22:
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 45


 1678 00be 45455F54 		.ascii	"EE_TID\000"
 1678      494400
 1679              	.LASF21:
 1680 00c5 45455F54 		.ascii	"EE_TYPEISR2PRIO\000"
 1680      59504549 
 1680      53523250 
 1680      52494F00 
 1681              	.LASF43:
 1682 00d5 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1682      52515F6E 
 1682      65737469 
 1682      6E675F6C 
 1682      6576656C 
 1683              	.LASF57:
 1684 00ea 45455F6F 		.ascii	"EE_oo_TerminateTask\000"
 1684      6F5F5465 
 1684      726D696E 
 1684      61746554 
 1684      61736B00 
 1685              	.LASF60:
 1686 00fe 433A5C55 		.ascii	"C:\\Users\\Mateo C. Querol\\OneDrive\\University\\D"
 1686      73657273 
 1686      5C4D6174 
 1686      656F2043 
 1686      2E205175 
 1687 012c 61726D73 		.ascii	"armstadt\\Embedded Architecture and Applications\\L"
 1687      74616474 
 1687      5C456D62 
 1687      65646465 
 1687      64204172 
 1688 015d 6162735C 		.ascii	"abs\\Lab 1 - Electronic Gas Pedal\\ElectronicGasPed"
 1688      4C616220 
 1688      31202D20 
 1688      456C6563 
 1688      74726F6E 
 1689 018e 616C2E63 		.ascii	"al.cydsn\000"
 1689      7964736E 
 1689      00
 1690              	.LASF11:
 1691 0197 666C6F61 		.ascii	"float\000"
 1691      7400
 1692              	.LASF6:
 1693 019d 6C6F6E67 		.ascii	"long long int\000"
 1693      206C6F6E 
 1693      6720696E 
 1693      7400
 1694              	.LASF13:
 1695 01ab 63686172 		.ascii	"char\000"
 1695      00
 1696              	.LASF4:
 1697 01b0 6C6F6E67 		.ascii	"long int\000"
 1697      20696E74 
 1697      00
 1698              	.LASF33:
 1699 01b9 45455F73 		.ascii	"EE_systick_start\000"
 1699      79737469 
 1699      636B5F73 
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 46


 1699      74617274 
 1699      00
 1700              	.LASF40:
 1701 01ca 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1701      6F5F4952 
 1701      515F7375 
 1701      7370656E 
 1701      645F7374 
 1702              	.LASF52:
 1703 01e3 4C45445F 		.ascii	"LED_Init\000"
 1703      496E6974 
 1703      00
 1704              	.LASF38:
 1705 01ec 46756E63 		.ascii	"Functsk_init\000"
 1705      74736B5F 
 1705      696E6974 
 1705      00
 1706              	.LASF56:
 1707 01f9 45455F6F 		.ascii	"EE_oo_ActivateTask\000"
 1707      6F5F4163 
 1707      74697661 
 1707      74655461 
 1707      736B00
 1708              	.LASF29:
 1709 020c 45455F63 		.ascii	"EE_cortex_mx_get_int_prio\000"
 1709      6F727465 
 1709      785F6D78 
 1709      5F676574 
 1709      5F696E74 
 1710              	.LASF14:
 1711 0226 6C6F6E67 		.ascii	"long double\000"
 1711      20646F75 
 1711      626C6500 
 1712              	.LASF23:
 1713 0232 45455F69 		.ascii	"EE_increment_IRQ_nesting_level\000"
 1713      6E637265 
 1713      6D656E74 
 1713      5F495251 
 1713      5F6E6573 
 1714              	.LASF1:
 1715 0251 756E7369 		.ascii	"unsigned char\000"
 1715      676E6564 
 1715      20636861 
 1715      7200
 1716              	.LASF24:
 1717 025f 45455F63 		.ascii	"EE_cortex_mx_disableIRQ\000"
 1717      6F727465 
 1717      785F6D78 
 1717      5F646973 
 1717      61626C65 
 1718              	.LASF17:
 1719 0277 45455F55 		.ascii	"EE_UINT32\000"
 1719      494E5433 
 1719      3200
 1720              	.LASF48:
 1721 0281 45455F63 		.ascii	"EE_cortex_mx_change_IRQ_stack\000"
 1721      6F727465 
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 47


 1721      785F6D78 
 1721      5F636861 
 1721      6E67655F 
 1722              	.LASF0:
 1723 029f 7369676E 		.ascii	"signed char\000"
 1723      65642063 
 1723      68617200 
 1724              	.LASF7:
 1725 02ab 6C6F6E67 		.ascii	"long long unsigned int\000"
 1725      206C6F6E 
 1725      6720756E 
 1725      7369676E 
 1725      65642069 
 1726              	.LASF8:
 1727 02c2 756E7369 		.ascii	"unsigned int\000"
 1727      676E6564 
 1727      20696E74 
 1727      00
 1728              	.LASF66:
 1729 02cf 46756E63 		.ascii	"Functsk_background\000"
 1729      74736B5F 
 1729      6261636B 
 1729      67726F75 
 1729      6E6400
 1730              	.LASF32:
 1731 02e2 70657269 		.ascii	"period\000"
 1731      6F6400
 1732              	.LASF42:
 1733 02e9 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1733      74645F65 
 1733      6E646379 
 1733      636C655F 
 1733      6E657874 
 1734              	.LASF16:
 1735 0302 45455F49 		.ascii	"EE_INT32\000"
 1735      4E543332 
 1735      00
 1736              	.LASF28:
 1737 030b 45455F63 		.ascii	"EE_cortex_mx_IRQ_active_change_context\000"
 1737      6F727465 
 1737      785F6D78 
 1737      5F495251 
 1737      5F616374 
 1738              	.LASF3:
 1739 0332 73686F72 		.ascii	"short unsigned int\000"
 1739      7420756E 
 1739      7369676E 
 1739      65642069 
 1739      6E7400
 1740              	.LASF63:
 1741 0345 45455F73 		.ascii	"EE_systick_enable_int\000"
 1741      79737469 
 1741      636B5F65 
 1741      6E61626C 
 1741      655F696E 
 1742              	.LASF30:
 1743 035b 45455F73 		.ascii	"EE_systick_set_period\000"
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 48


 1743      79737469 
 1743      636B5F73 
 1743      65745F70 
 1743      6572696F 
 1744              	.LASF65:
 1745 0371 756E6861 		.ascii	"unhandledException\000"
 1745      6E646C65 
 1745      64457863 
 1745      65707469 
 1745      6F6E00
 1746              	.LASF49:
 1747 0384 45455F63 		.ascii	"EE_cortex_mx_change_IRQ_stack_back\000"
 1747      6F727465 
 1747      785F6D78 
 1747      5F636861 
 1747      6E67655F 
 1748              	.LASF10:
 1749 03a7 696E7433 		.ascii	"int32_t\000"
 1749      325F7400 
 1750              	.LASF9:
 1751 03af 5F5F696E 		.ascii	"__int32_t\000"
 1751      7433325F 
 1751      7400
 1752              	.LASF59:
 1753 03b9 736F7572 		.ascii	"source\\asw\\main.c\000"
 1753      63655C61 
 1753      73775C6D 
 1753      61696E2E 
 1753      6300
 1754              	.LASF41:
 1755 03cb 45455F41 		.ascii	"EE_ApplicationMode\000"
 1755      70706C69 
 1755      63617469 
 1755      6F6E4D6F 
 1755      646500
 1756              	.LASF5:
 1757 03de 6C6F6E67 		.ascii	"long unsigned int\000"
 1757      20756E73 
 1757      69676E65 
 1757      6420696E 
 1757      7400
 1758              	.LASF50:
 1759 03f0 45455F6F 		.ascii	"EE_oo_StartOS\000"
 1759      6F5F5374 
 1759      6172744F 
 1759      5300
 1760              	.LASF36:
 1761 03fe 49535232 		.ascii	"ISR2_systick_handler\000"
 1761      5F737973 
 1761      7469636B 
 1761      5F68616E 
 1761      646C6572 
 1762              	.LASF62:
 1763 0413 45455F69 		.ascii	"EE_is_inside_ISR_call\000"
 1763      735F696E 
 1763      73696465 
 1763      5F495352 
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 49


 1763      5F63616C 
 1764              	.LASF35:
 1765 0429 76656374 		.ascii	"vectact\000"
 1765      61637400 
 1766              	.LASF53:
 1767 0431 4A4F5953 		.ascii	"JOYSTICK_Init\000"
 1767      5449434B 
 1767      5F496E69 
 1767      7400
 1768              	.LASF45:
 1769 043f 45455F6F 		.ascii	"EE_oo_IncrementCounter\000"
 1769      6F5F496E 
 1769      6372656D 
 1769      656E7443 
 1769      6F756E74 
 1770              	.LASF27:
 1771 0456 45455F63 		.ascii	"EE_cortex_mx_enableIRQ\000"
 1771      6F727465 
 1771      785F6D78 
 1771      5F656E61 
 1771      626C6549 
 1772              	.LASF61:
 1773 046d 45455F63 		.ascii	"EE_cortex_mx_set_int_prio\000"
 1773      6F727465 
 1773      785F6D78 
 1773      5F736574 
 1773      5F696E74 
 1774              	.LASF12:
 1775 0487 646F7562 		.ascii	"double\000"
 1775      6C6500
 1776              	.LASF37:
 1777 048e 73797374 		.ascii	"systick_handler\000"
 1777      69636B5F 
 1777      68616E64 
 1777      6C657200 
 1778              	.LASF44:
 1779 049e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1779      52784275 
 1779      66666572 
 1779      00
 1780              	.LASF58:
 1781 04ab 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1781      43313120 
 1781      352E342E 
 1781      31203230 
 1781      31363036 
 1782 04de 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1782      20726576 
 1782      6973696F 
 1782      6E203233 
 1782      37373135 
 1783 0511 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1783      66756E63 
 1783      74696F6E 
 1783      2D736563 
 1783      74696F6E 
 1784              	.LASF39:
ARM GAS  C:\Users\MATEOC~1.QUE\AppData\Local\Temp\ccXtkrYn.s 			page 50


 1785 0539 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1785      6F5F4952 
 1785      515F6469 
 1785      7361626C 
 1785      655F636F 
 1786              	.LASF31:
 1787 0551 7072696F 		.ascii	"prio\000"
 1787      00
 1788              	.LASF25:
 1789 0556 45455F64 		.ascii	"EE_decrement_IRQ_nesting_level\000"
 1789      65637265 
 1789      6D656E74 
 1789      5F495251 
 1789      5F6E6573 
 1790              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
